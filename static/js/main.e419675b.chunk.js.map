{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","game/hooks/useResizeScreen.js","assets/svg/sprites/HPBar.js","assets/svg/sprites/Spells.js","assets/svg/sprites/index.js","assets/svg/sprites/Circle.js","assets/svg/sprites/Player.js","assets/svg/sprites/Enemy.js","assets/svg/sprites/Attacks.js","game/Renderer.js","assets/svg/UI/Background.js","game/UI/Overlay.js","game/UI/Menu.js","game/hooks/useSpellbook.js","game/UI/Spellbook.js","game/UI/Battle.js","game/hooks/useBlockTiles.js","game/bodies/targeting.js","game/hooks/useEngine.js","game/hooks/useCommon.js","game/hooks/useMove.js","game/UI/Move.js","game/UI/Chat.js","game/UI/BattleMenu.js","game/UI/Result.js","game/UI.js","game/scenario/Board.js","game/scenario/Tile.js","game/scenario/Grid.js","game/scenario/Start.js","game/bodies/index.js","game/bodies/attacks.js","game/bodies/spells.js","game/hooks/usePhase.js","game/hooks/BattleHooks.js","game/bodies/player.js","game/bodies/enemies.js","game/scene/index.js","game/hooks/useEndTurn.js","game/BattleScenario.js","game/overworld/Page.js","game/overworld/index.js","game/overworld/Background.js","game/overworld/Title.js","game/overworld/Arrows.js","game/overworld/AnimateFade.js","game/overworld/Screen.js","game/overworld/PageTitle.js","game/overworld/PageColumns.js","game/overworld/PageColumn.js","game/overworld/PageLine.js","game/overworld/History.js","game/Overworld.js","game/hooks/useAnimationFrame.js","game/index.js","assets/svg/definitions/playerDef.js","assets/svg/Definitions.js","assets/svg/ViewBox.js","redux/reducers/world.js","App.js","redux/reducers/screen.js","redux/reducers/mouse.js","redux/reducers/ui.js","redux/reducers/spellbook.js","redux/reducers/player.js","redux/reducers/battle.js","redux/reducers/move.js","redux/reducers/chat.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["updateTile","tile","type","payload","showSpellbook","boolean","setSpellbookLength","int","loadSpellbook","spells","showBattle","showBattleTitle","bool","showBattleMenu","setBattleResult","string","setPlayerAngle","setPlayerPosition","vector","setPlayerMoved","showMove","setChatMessages","messages","showScenario","showStartButton","updatePage","n","useResizeScreen","dispatch","useDispatch","viewBox","useSelector","state","screen","useEffect","handleResize","height","window","innerHeight","innerWidth","width","offset","windowOffset","getSize","addEventListener","removeEventListener","HPBar","props","percent","r","cx","cy","angle","Math","PI","hpRatio","hp","maxHP","filling","x","y","fill","opacity","pointerEvents","fontFamily","fontSize","textAnchor","alignmentBaseline","elementColor","earth","wind","fire","water","force","prismatic","delta","stone","sand","magma","frostfire","lightning","ice","Circle","Player","transform","xlinkHref","Enemy","stroke","strokeWidth","name","d","Spells","bolt","key","id","position","circleRadius","element","ball","rain","attributeName","from","to","dur","begin","Attacks","Slash","Shot","renderBodies","label","Sprites","shape","body","Renderer","world","bodies","map","Background","mask","filter","Overlay","list","MenuList","index","Menu","Fragment","ry","baseSpell","range","damage","amount","sides","source","effect","origin","effectChance","maximize","combine","empower","target","decode","array","runes","spell","craftSpell","i","length","push","trimStart","undefined","cypher","craft","forEach","discoverName","runeArray","splice","TI","FU","GA","VE","LO","SU","KO","MU","LU","incompatibilities","rune","lastRune","newSpell","isCompatible","property","addRune","shapes","single","all","self","cone","e","combineElements","Spellbook","spellLength","spellbook","word","playerPosition","player","timeout","useRef","spellbookLength","useState","setWord","onKeyDown","test","newWord","toUpperCase","document","querySelectorAll","beginElement","current","setTimeout","clearTimeout","useSpellbook","maxWidth","maxHeight","letterSize","sizeProps","fade","className","calcMode","SpellTitle","title","fontVariant","Battle","showTitle","battle","showStart","useBlockTiles","block","args","blocked","unblock","Target","getAngle360","theta","atan2","getAngle","getVelocity","speed","cos","sin","engine","Engine","create","timer","gravity","worldContext","React","createContext","useEngine","gameEngine","events","round","collisionEvents","pairs","obj","pair","bodyA","bodyB","Object","keys","sort","join","attack","totalDamage","calcDamage","message","explode","enemy","combinedExtraDamage","remove","collisionEffect","Events","on","off","receiver","totalSourceDamage","ceil","random","useCommon","useContext","intervals","fns","stepGen","value","callback","delay","timeStamp","interval","setInterval","abs","clearInterval","timeoutNext","next","fnTimeoutNext","fn","searchByX","pos","arr","floor","slice","searchTile","filtered","getDistance","sqrt","pow","searchID","searchPlayer","useMove","shallowEqual","board","isBusy","t","common","onClick","moved","attributes","playerBody","Body","setAngle","move","remainingSteps","connections","isBlocked","sorted","a","b","destination","moveSpeed","copySpells","Move","Chat","chat","querySelector","keyTimes","values","onMouseOver","onMouseLeave","BattleMenuText","children","BattleMenu","TitleText","text","split","Result","result","UI","pause","show","battleMenu","showMenu","connect","Tile","memo","keySplines","StartButton","opacityId","scaleYId","scaleXId","textId","additive","GameBody","checkIfInArea","currentPosition","targetPosition","errorRange","isStatic","setStatic","setVelocity","setPosition","velocity","this","Bodies","circle","add","World","isSensor","Bolt","meta","Explosion","Exploding","Rain","animate","$body","usePhase","spellTitle","nextPhase","g","schedule","useShowSpellTitle","spellBody","useMakeSpellBody","start","walk","behaviour","reverse","movePhase","attackPhase","cast","spellList","flat","cleanup","Skeleton","Warg","Elf","Statue","useScene","currentPage","allFights","fights","setResult","victory","defeat","useSetResult","tiles","phase","enemies","players","newTurn","characters","useEndTurn","playerStart","enemyStart","newPlayer","gargoyleLeft","gargoyleRight","garg","oyle","Scenario","startFight","startButton","Start","Page","margin","divideString","columns","divideColumn","PageTitle","PageColumns","response","line","maxLength","Title","Arrows","AnimateFade","Screen","backgroundProps","fight","content","PageColumn","column","PageLine","pages","Overworld","Pages","useAnimationFrame","requestRef","requestAnimationFrame","update","updateBodies","updateCycle","cancelAnimationFrame","Game","BattleScenario","playerDef","rx","menu","fx","fy","stopColor","stopOpacity","baseFrequency","numOctaves","stdDeviation","preserveAspectRatio","withCookies","cookies","initialState","svg","results","get4Centers","times","remainingTimes","sortByHeight","connectTiles","generateBoard","top","topleft","topright","left","right","botleft","botright","bot","HP","combineReducers","action","mouse","max","STORE","createStore","rootReducer","compose","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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cAAc,QACbhB,EAAMqY,WC2JJI,GAtKH,CACR,CACIvO,MAAO,SACPyH,KAAM,GACNyG,OAAO,GAEX,CACIlO,MAAO,2BACPyH,KAAM,GACNyG,OAAO,GAEX,CACIlO,MAAO,GACPkO,MAAO,WACPzG,KAAM,CACF,yDACA,GACA,wGACA,GACA,gFACA,GACA,2DACA,GACA,8EAGR,CACIzH,MAAO,GACPkO,OAAO,EACPzG,KAAM,CACF,2EACA,GACA,0DACA,GACA,sFACA,GACA,yFAIR,CACIzH,MAAO,GACPkO,MAAO,WACPzG,KAAM,CACF,6FACA,GACA,0HACA,yFACA,4GACA,GACA,2CAGR,CACIzH,MAAO,GACPkO,OAAO,EACPzG,KAAM,CACF,mCACA,GACA,6GACA,GACA,mGACA,GACA,+FAGR,CACIzH,MAAO,GACPkO,OAAO,EACPzG,KAAM,CACF,uJACA,GACA,2GACA,GACA,qGAGR,CACIzH,MAAO,GACPkO,MAAO,YACPzG,KAAM,CACF,uJACA,GACA,+CACA,GACA,mBACA,kBACA,mBACA,kBACA,GACA,iKAGR,CACIzH,MAAO,GACPkO,OAAO,EACPzG,KAAM,CACF,8CACA,GACA,qJACA,GACA,oDACA,GACA,qHAGR,CACIzH,MAAO,GACPkO,OAAO,EACPzG,KAAM,CACF,wKACA,GACA,0EACA,GACA,+FAGR,CACIzH,MAAO,GACPkO,OAAO,EACPzG,KAAM,CACF,oKACA,GACA,2JACA,GACA,gHAGR,CACIzH,MAAO,GACPkO,MAAO,YACPzG,KAAM,CACF,yHACA,GACA,qIACA,GACA,oHAGR,CACIzH,MAAO,GACPkO,MAAO,YACPzG,KAAM,CACF,0CACA,GACA,mEACA,GACA,mEACA,GACA,kCAGR,CACIzH,MAAO,GACPkO,OAAO,EACPzG,KAAM,CACF,yBACA,GACA,mGACA,GACA,yDACA,gBC9IG+G,GAbC,WACZ,IAAI9C,EAAc5W,aAAY,SAAAC,GAAK,OAAIA,EAAMkF,MAAMyR,eAC/CE,EAAS9W,aAAY,SAAAC,GAAK,OAAIA,EAAMkF,MAAM2R,UAC1CjX,EAAWC,cAGf,OACI,kB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","file":"static/js/main.e419675b.chunk.js","sourcesContent":["import {\r\n    SHOW_SCREEN,\r\n    RESIZE_SCREEN,\r\n    MOUSE_SET,\r\n    PAUSE_SET,\r\n    UPDATE_BODIES,\r\n    UI_SHOW,\r\n    UPDATE_BOARD,\r\n    UPDATE_TILE,\r\n    UPDATE_PAGE,\r\n    SPELLBOOK_SHOW,\r\n    SPELLBOOK_LENGTH_SET,\r\n    SPELLBOOK_LOAD,\r\n    BATTLE_SHOW,\r\n    BATTLE_SPELL_TITLE_SHOW,\r\n    BATTLE_START_SHOW,\r\n    BATTLE_SPELL_TITLE_SET,\r\n    BATTLE_PHASE_FORCE_NEXT,\r\n    BATTLE_MENU_SHOW,\r\n    PLAYER_POSITION_SET,\r\n    PLAYER_HP_SET,\r\n    PLAYER_ANGLE_SET,\r\n    PLAYER_MAXHP_SET,\r\n    PLAYER_MOVED_SET,\r\n    MOVE_SHOW,\r\n    CHAT_SHOW,\r\n    CHAT_MESSAGES_SET,\r\n    BATTLE_RESULT_SET,\r\n    SCENARIO_SHOW,\r\n    START_BUTTON_SHOW,\r\n    FIGHT_ENTRY_UPDATE,\r\n    \r\n} from \"./actionTypes\"\r\n\r\nexport const showScreen = screen => {\r\n    return ({\r\n        type: SHOW_SCREEN,\r\n        payload: screen\r\n    })\r\n}\r\n\r\nexport const resizeScreen = data => {\r\n    return ({\r\n        type: RESIZE_SCREEN,\r\n        payload: data\r\n    })\r\n}\r\n\r\nexport const mouseSet = data => {\r\n    return ({\r\n        type: MOUSE_SET,\r\n        payload: data,\r\n    })\r\n}\r\n\r\nexport const updateBodies = bodies => {\r\n    return ({\r\n        type: UPDATE_BODIES,\r\n        payload: bodies\r\n    })\r\n}\r\n\r\nexport const updateBoard = board => {\r\n    return ({\r\n        type: UPDATE_BOARD,\r\n        payload: board\r\n    })\r\n}\r\n\r\nexport const updateTile = tile => {\r\n    return ({\r\n        type: UPDATE_TILE,\r\n        payload: tile\r\n    })\r\n}\r\n\r\nexport const showUI = boolean => {\r\n    return ({\r\n        type: UI_SHOW,\r\n        payload: boolean\r\n    })\r\n}\r\n\r\nexport const setPause = boolean => {\r\n    return ({\r\n        type: PAUSE_SET,\r\n        payload: boolean\r\n    })\r\n}\r\n\r\nexport const showSpellbook = boolean => {\r\n    return ({\r\n        type: SPELLBOOK_SHOW,\r\n        payload: boolean,\r\n    })\r\n}\r\nexport const setSpellbookLength = int => {\r\n    return ({\r\n        type: SPELLBOOK_LENGTH_SET,\r\n        payload: int,\r\n    })\r\n}\r\nexport const loadSpellbook = spells => {\r\n    return ({\r\n        type: SPELLBOOK_LOAD,\r\n        payload: spells\r\n    })\r\n}\r\n\r\nexport const showBattle = boolean => {\r\n    return ({\r\n        type: BATTLE_SHOW,\r\n        payload: boolean\r\n    })\r\n}\r\nexport const showBattleTitle = bool => {\r\n    return ({\r\n        type: BATTLE_SPELL_TITLE_SHOW,\r\n        payload: bool\r\n    })\r\n}\r\n\r\nexport const setBattleTitle = title => {\r\n    return ({\r\n        type: BATTLE_SPELL_TITLE_SET,\r\n        payload: title\r\n    })\r\n}\r\n\r\nexport const showBattleStart = boolean => {\r\n    return ({\r\n        type: BATTLE_START_SHOW,\r\n        payload: boolean\r\n    })\r\n}\r\n\r\nexport const showBattleMenu = boolean => {\r\n    return ({\r\n        type: BATTLE_MENU_SHOW,\r\n        payload: boolean\r\n    })\r\n}\r\nexport const battlePhaseForceNext = fn => {\r\n    return ({\r\n        type: BATTLE_PHASE_FORCE_NEXT,\r\n        payload: fn\r\n    })\r\n}\r\n\r\nexport const setBattleResult = string => {\r\n    return ({\r\n        type: BATTLE_RESULT_SET,\r\n        payload: string\r\n    })\r\n}\r\nexport const setPlayerHP = int => {\r\n    return ({\r\n        type: PLAYER_HP_SET,\r\n        payload: int\r\n    })\r\n}\r\n\r\nexport const setPlayerMaxHP = int => {\r\n    return ({\r\n        type: PLAYER_MAXHP_SET,\r\n        payload: int\r\n    })\r\n}\r\nexport const setPlayerAngle = int => {\r\n    return ({\r\n        type: PLAYER_ANGLE_SET,\r\n        payload: int\r\n    })\r\n}\r\nexport const setPlayerPosition = vector => {\r\n    return ({\r\n        type: PLAYER_POSITION_SET,\r\n        payload: vector\r\n    })\r\n}\r\n\r\nexport const setPlayerMoved = bool => {\r\n    return ({\r\n        type: PLAYER_MOVED_SET,\r\n        payload: bool\r\n    })\r\n}\r\nexport const showMove = bool => {\r\n    return ({\r\n        type: MOVE_SHOW,\r\n        payload: bool\r\n    })\r\n}\r\n\r\nexport const showChat = bool => {\r\n    return ({\r\n        type: CHAT_SHOW,\r\n        payload: bool\r\n    })\r\n}\r\n\r\nexport const setChatMessages = messages => {\r\n    return ({\r\n        type: CHAT_MESSAGES_SET,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const showScenario = bool => {\r\n    return ({\r\n        type: SCENARIO_SHOW,\r\n        payload: bool\r\n    })\r\n}\r\n\r\nexport const showStartButton = bool => {\r\n    return ({\r\n        type: START_BUTTON_SHOW,\r\n        payload: bool\r\n    })\r\n}\r\n\r\nexport const updateFight = n => {\r\n    return ({\r\n        type: FIGHT_ENTRY_UPDATE,\r\n        payload: n\r\n    })\r\n}\r\nexport const updatePage = n => {\r\n    return ({\r\n        type: UPDATE_PAGE,\r\n        payload: n\r\n    })\r\n}\r\n","export const SHOW_SCREEN = \"SHOW_SCREEN\"\r\nexport const RESIZE_SCREEN = \"RESIZE_SCREEN\"\r\nexport const PAUSE_SET = \"PAUSE_SET\"\r\n\r\nexport const MOUSE_SET = \"MOUSE_SET\"\r\n\r\nexport const UPDATE_BODIES = \"UPDATE_BODIES\"\r\nexport const UPDATE_BOARD = \"UPDATE_BOARD\"\r\nexport const UPDATE_TILE = \"UPDATE_TILE\"\r\nexport const UPDATE_PAGE = \"UPDATE_PAGE\"\r\n\r\nexport const UI_SHOW = \"UI_SHOW\"\r\n\r\nexport const SPELLBOOK_SHOW = \"SPELLBOOK_SHOW\"\r\nexport const SPELLBOOK_LENGTH_SET = \"SPELLBOOK_LENGTH_SET\"\r\nexport const SPELLBOOK_LOAD = \"SPELLBOOK_LOAD\"\r\n\r\nexport const BATTLE_SHOW = \"BATTLE_SHOW\"\r\nexport const BATTLE_CLEAR = \"BATTLE_CLEAR\"\r\nexport const BATTLE_SPELL_TITLE_SHOW = \"BATTLE_SPELL_TITLE_SHOW\"\r\nexport const BATTLE_SPELL_TITLE_SET = \"BATTLE_SPELL_TITLE_SET\"\r\nexport const BATTLE_START_SHOW = \"BATTLE_START_SHOW\"\r\nexport const BATTLE_MENU_SHOW = \"BATTLE_MENU_SHOW\"\r\nexport const BATTLE_PHASE_FORCE_NEXT = \"BATTLE_PHASE_FORCE_NEXT\"\r\nexport const BATTLE_RESULT_SET = \"BATTLE_RESULT_SET\"\r\n\r\nexport const PLAYER_ANGLE_SET = \"PLAYER_ANGLE_SET\"\r\nexport const PLAYER_HP_SET = \"PLAYER_HP_SET\"\r\nexport const PLAYER_MAXHP_SET = \"PLAYER_MAXHP_SET\"\r\nexport const PLAYER_POSITION_SET = \"PLAYER_POSITION_SET\"\r\nexport const PLAYER_MOVED_SET = \"PLAYER_MOVED_SET\"\r\n\r\nexport const MOVE_SHOW = \"MOVE_SHOW\"\r\n\r\nexport const CHAT_SHOW = \"CHAT_SHOW\"\r\nexport const CHAT_MESSAGES_SET = \"CHAT_MESSAGES_SET\"\r\n\r\nexport const SCENARIO_SHOW = \"SCENARIO_SHOW\"\r\nexport const START_BUTTON_SHOW = \"START_BUTTON_SHOW\"\r\nexport const FIGHT_ENTRY_UPDATE = \"FIGHT_ENTRY_UPDATE\"\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\nimport { resizeScreen } from \"../../redux/actions\"\r\n\r\nexport let useResizeScreen = () => {\r\n    let dispatch = useDispatch()\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            dispatch(resizeScreen(getSize(viewBox)));\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, [viewBox, dispatch])\r\n}\r\n\r\nfunction getSize(viewBox) {\r\n    let height = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth * 9 / 16 : window.innerHeight\r\n    let width = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth : window.innerHeight * 16 / 9\r\n    let offset = (window.innerWidth - width) / 2\r\n    return {\r\n        height: height,\r\n        width: width,\r\n        offset: offset * (viewBox.width / width),\r\n        windowOffset: (window.innerWidth - width) / -2 \r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nfunction fill(percent) {\r\n    if (percent > 0.5) return \"lightgreen\"\r\n    else if (percent > 0.1) return \"yellow\"\r\n    return \"red\"\r\n}\r\n\r\nlet HPBar = props => {\r\n    let width = props.r + 50\r\n    let height = width / 4\r\n    let cx = props.cx + width / -2\r\n    let cy = props.angle * 180 / Math.PI > -0.01 ? props.cy + height / -2 - props.r - 35 : props.cy + height / -2 + props.r + 35\r\n    let hpRatio = props.hp / props.maxHP\r\n    let filling = fill(hpRatio)\r\n    return (\r\n        <g>\r\n            <rect\r\n                width={width}\r\n                height={height}\r\n                x={cx}\r\n                y={cy}\r\n                fill=\"grey\"\r\n                opacity=\"0.5\"\r\n                pointerEvents=\"none\">\r\n            </rect>\r\n            <rect\r\n                width={hpRatio >= 0 ? (width * hpRatio) : 0}\r\n                height={height}\r\n                x={cx}\r\n                y={cy}\r\n                fill={filling}\r\n                opacity=\"0.8\"\r\n                pointerEvents=\"none\">\r\n            </rect>\r\n            <text\r\n                fontFamily=\"Arial Black\"\r\n                fontSize={height}\r\n                fill=\"white\"\r\n                x={props.cx}\r\n                y={cy + height / 2}\r\n                textAnchor=\"middle\"\r\n                alignmentBaseline=\"central\">\r\n                {props.hp}\r\n            </text>\r\n\r\n        </g>\r\n    )\r\n}\r\nexport default HPBar\r\n","import React from 'react'\r\nlet elementColor = {\r\n    earth: \"brown\",\r\n    wind: \"indigo\",\r\n    fire: \"red\",\r\n    water: \"blue\",\r\n    force: \"grey\",\r\n    prismatic: \"white\",\r\n    delta: \"yellow\",\r\n    stone: \"lightgray\",\r\n    sand: \"goldenrod\",\r\n    magma: \"maroon\",\r\n    frostfire: \"cyan\",\r\n    lightning: \"yellow\",\r\n    ice: \"lightseagreen\",\r\n}\r\n\r\nlet Spells = {\r\n    bolt: key => (\r\n        <circle\r\n            key={key.id}\r\n            cx={key.position.x}\r\n            cy={key.position.y}\r\n            r={key.circleRadius}\r\n            fill={elementColor[key.name.element]}\r\n        />\r\n    ),\r\n    ball: key => (\r\n        <circle\r\n            key={key.id}\r\n            cx={key.position.x}\r\n            cy={key.position.y}\r\n            r={key.circleRadius}\r\n            fill={elementColor[key.name.element]}\r\n        />\r\n    ),\r\n    rain: key => (\r\n        <circle\r\n            key={key.id}\r\n            cx={key.position.x}\r\n            cy={key.position.y - key.circleRadius - 150}\r\n            r={key.circleRadius}\r\n            fill={elementColor[key.name.element]}\r\n        >\r\n            <animateTransform\r\n                id={`rain${key.id}`}\r\n                attributeName=\"transform\"\r\n                type=\"translate\"\r\n                from=\"0 0\"\r\n                to=\"0 150\"\r\n                dur=\"1.5s\"\r\n                begin=\"indefinite\"\r\n                fill=\"freeze\" />\r\n        </circle>\r\n    ),\r\n}\r\n\r\nexport default Spells\r\n","import Circle from \"./Circle\"\r\nimport Player from \"./Player\"\r\nimport Enemy from \"./Enemy\"\r\nimport Spells from \"./Spells\"\r\nimport Attacks from \"./Attacks\"\r\nexport default {Circle, Player, Enemy, Spells, Attacks}\r\n","import React from 'react'\r\n\r\nlet Circle = props => {\r\n    return (\r\n        <circle\r\n            cx={props.cx}\r\n            cy={props.cy}\r\n            r={props.r}\r\n            fill=\"white\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default Circle\r\n","import React from \"react\"\r\nimport HPBar from \"./HPBar\"\r\n\r\nlet Player = props => {\r\n    let [width, height] = [75, 75]\r\n    return (\r\n        <g>\r\n            <circle cx={props.cx + 125} cy={props.cy} r=\"10\" fill=\"purple\" transform={`rotate(${props.angle * 180 / Math.PI} ${props.cx} ${props.cy})`} />\r\n            <HPBar\r\n                cx={props.cx}\r\n                cy={props.cy}\r\n                r={props.r}\r\n                hp={props.hp}\r\n                maxHP={props.maxHP}\r\n                angle={props.angle}\r\n            />\r\n            <use xlinkHref=\"#playerSprite\" width={width} height={height} x={props.cx + width / -2} y={props.cy + height / -2 - 10} />\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React from \"react\"\r\nimport HPBar from \"./HPBar\"\r\nlet Enemy = props => {\r\n    return (\r\n        <g>\r\n            <text\r\n                x={props.cx}\r\n                y={props.cy + props.r + 20}\r\n                fontSize=\"20\"\r\n                fontFamily=\"Arial Black\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"0.5\"\r\n                textAnchor='middle'\r\n                alignmentBaseline=\"central\">\r\n                {props.name}\r\n            </text>\r\n            <HPBar angle={props.angle} cx={props.cx} cy={props.cy} r={props.r} hp={props.hp} maxHP={props.maxHP} />\r\n            <g transform={`rotate(${props.angle * 180/Math.PI} ${props.cx} ${props.cy})`}>\r\n                <path fill=\"red\"\r\n                    d={`\r\n                    M${props.cx} ${props.cy - props.r} \r\n                    L${props.cx + props.r * 1.5} ${props.cy} \r\n                    L${props.cx} ${props.cy + props.r}Z`} />\r\n                <circle\r\n                    cx={props.cx}\r\n                    cy={props.cy}\r\n                    r={props.r}\r\n                    fill=\"red\"\r\n                />\r\n            </g>\r\n\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Enemy\r\n","import React from 'react'\r\nlet Attacks = {\r\n    Slash: key => (\r\n        <circle\r\n            key={key.id}\r\n            cx={key.position.x}\r\n            cy={key.position.y}\r\n            r={key.circleRadius}\r\n            fill='white'\r\n        />\r\n    ),\r\n    Shot: key => (\r\n        <circle\r\n            key={key.id}\r\n            cx={key.position.x}\r\n            cy={key.position.y}\r\n            r={key.circleRadius}\r\n            fill='white'\r\n        />\r\n    )\r\n}\r\nexport default Attacks\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Sprites from \"../assets/svg/sprites\"\r\n\r\nlet Renderer = () => {\r\n    let bodies = useSelector(state => state.world.bodies)\r\n    return bodies.map(key => renderBodies(key))\r\n}\r\n\r\nlet renderBodies = key => {\r\n    switch (key.label) {\r\n        case \"Spell\": return Sprites.Spells[key.name.shape](key)\r\n        case \"Attack\": return Sprites.Attacks[key.name](key)\r\n        case \"Exploding\": {\r\n            return Sprites.Spells[\"bolt\"](key)\r\n        }\r\n        case \"Circle Body\": return (\r\n            <Sprites.Circle\r\n                key={key.id}\r\n                body={key.id}\r\n                cx={key.position.x}\r\n                cy={key.position.y}\r\n                r={key.circleRadius}\r\n            />\r\n        )\r\n        case \"Player\": return (\r\n            <Sprites.Player\r\n                body={key.id}\r\n                key={key.id}\r\n                hp={key.hp}\r\n                maxHP={key.maxHP}\r\n                cx={key.position.x}\r\n                cy={key.position.y}\r\n                r={key.circleRadius}\r\n                angle={key.angle}\r\n            />\r\n        )\r\n        case \"Enemy\": return (\r\n            <Sprites.Enemy\r\n                key={key.id}\r\n                body={key.id}\r\n                hp={key.hp}\r\n                maxHP={key.maxHP}\r\n                cx={key.position.x}\r\n                cy={key.position.y}\r\n                r={key.circleRadius}\r\n                angle={key.angle}\r\n                name={key.name}\r\n            />\r\n        )\r\n        default: return\r\n    }\r\n\r\n}\r\n\r\nexport default Renderer\r\n","import React from 'react'\r\n\r\nlet Background = props => {\r\n\r\n    return (\r\n        <>\r\n            <rect\r\n                {...props}\r\n                fill=\"#1101AB\"\r\n                mask=\"url(#menu-background-mask)\" />\r\n            <rect\r\n                {...props}\r\n                fill=\"#1101AB\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"30\"\r\n                filter=\"url(#menu-filter)\" \r\n                mask=\"url(#menu-background-mask)\" />\r\n\r\n            <rect\r\n                {...props}\r\n                fill=\"transparent\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"30\"\r\n                mask=\"url(#menu-background-mask)\" />\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Background\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nlet Overlay = () => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    return (\r\n        <rect\r\n            width={viewBox.width}\r\n            height={viewBox.height}\r\n            x={viewBox.width / -2}\r\n            y={viewBox.height / -2}\r\n            fill=\"black\"\r\n            opacity=\"0.2\"\r\n            pointerEvents=\"none\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default Overlay\r\n","import React from \"react\"\r\nimport Background from \"../../assets/svg/UI/Background\"\r\nimport Overlay from \"./Overlay\"\r\nimport { useSelector } from \"react-redux\"\r\nlet list = [\r\n    \"ELEMENTAL RUNES GO FIRST\",\r\n    \"(FU) FOR FIRE\",\r\n    \"(VE) FOR WIND\",\r\n    \"(GA) FOR WATER\",\r\n    \"EARTH WITH (TI)\",\r\n    \"COMBINE THEM WITH (KO)\",\r\n    \"OR DIVIDE THEM WITH (SU)\",\r\n    \"ADD (MU) FOR EXPLOSION\",\r\n    \"AND FOR RAIN USE (LU)\",\r\n]\r\nlet Menu = () => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    return (\r\n        <React.Fragment>\r\n            <Overlay />\r\n            <Background\r\n                height={viewBox.height}\r\n                width={viewBox.height * 9 / 16}\r\n                x={(viewBox.height * 9 / 16) / -2}\r\n                y={viewBox.height / -2}\r\n                fill=\"#1101AB\"\r\n                ry=\"20\"\r\n            />\r\n            <MenuList list={list} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nlet MenuList = props => {\r\n    return (\r\n        <>\r\n            {props.list.map((key, index) => (\r\n                <text\r\n                    key={`menu${index}`}\r\n                    x={0}\r\n                    y={-500 + 50 * index}\r\n                    fontSize=\"25\"\r\n                    fontFamily=\"Arial Black\"\r\n                    fill=\"white\"\r\n                    textAnchor=\"middle\"\r\n                    alignmentBaseline=\"central\">\r\n                    {key}\r\n                </text>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Menu\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { showSpellbook, loadSpellbook, showBattleMenu } from \"../../redux/actions\"\r\n\r\nexport let useSpellbook = () => {\r\n    let playerPosition = useSelector(state => state.player.position)\r\n    let timeout = useRef()\r\n    let dispatch = useDispatch()\r\n    let spellbookLength = useSelector(state => state.spellbook.length)\r\n    let [word, setWord] = useState([])\r\n    useEffect(() => {\r\n        let onKeyDown = e => {\r\n            if (e.key === \"Escape\") {\r\n                dispatch(showSpellbook(false))\r\n                dispatch(showBattleMenu(true))\r\n            }\r\n            if (/^[A-Za-z]$/.test(e.key) && word.length < spellbookLength) {\r\n                let newWord = [...word, e.key.toUpperCase()]\r\n                setWord(newWord)\r\n            }\r\n            if (e.key === \"Enter\") {\r\n                let animateNode = document.querySelectorAll(\".spellLetter\")\r\n                animateNode.forEach(key => key.beginElement())\r\n                dispatch(loadSpellbook(decode(word, playerPosition)))\r\n                timeout.current = setTimeout(() => {\r\n                    dispatch(showSpellbook(false))\r\n                    dispatch(showBattleMenu(true))}, 1000)\r\n            }\r\n        }\r\n        window.addEventListener(\"keydown\", onKeyDown)\r\n        return () => {\r\n            window.removeEventListener('keydown', onKeyDown)\r\n            clearTimeout(timeout.current)\r\n        }\r\n    }, [word, dispatch, playerPosition, spellbookLength])\r\n    return word\r\n}\r\n\r\nlet baseSpell = {\r\n    element: [\"force\"],\r\n    range: \"10\",\r\n    damage: [{ amount: 1, sides: 6, source: \"force\" }],\r\n    effect: [],\r\n    origin: { x: 0, y: 0 },\r\n    effectChance: [],\r\n    maximize: false,\r\n    combine: false,\r\n    empower: false,\r\n    target: [\"single\"],\r\n}\r\nlet decode = (array, origin) => {\r\n    let runes = []\r\n    let spells = []\r\n    let spell = { ...baseSpell, origin: {...origin} }\r\n    let craftSpell = {...spell}\r\n    for (let i = 0; i < array.length; i += 2) runes.push(array[i] + array[i + 1])\r\n    runes = trimStart(runes)\r\n    for (let i = 0; i < runes.length; i++) {\r\n        if (cypher[runes[i]] !== undefined) {\r\n            spell = craft(spell, runes[i], runes[i - 1] || null)\r\n            if (i === runes.length - 1 || runes[i] === \"SU\") {\r\n                spells.push(spell)\r\n                spell = { ...craftSpell }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (spells.length === 0) spells.push(spell)\r\n    spells.forEach(key => key.name = discoverName(key))\r\n    return spells\r\n}\r\n\r\nlet trimStart = runeArray => {\r\n    let runes = [...runeArray]\r\n    if (runes.length === 0 || runes[0] === \"TI\" || runes[0] === \"FU\" || runes[0] === \"GA\" || runes[0] === \"VE\") { return runes }\r\n    runes.splice(0, 1)\r\n    return trimStart(runes)\r\n}\r\n\r\nlet cypher = {\r\n    TI: { element: [\"earth\"], damage: [{ amount: 1, sides: 6, source: 'earth' }] },\r\n    FU: { element: [\"fire\"], damage: [{ amount: 1, sides: 6, source: 'fire' }] },\r\n    GA: { element: [\"water\"], damage: [{ amount: 1, sides: 6, source: 'water' }] },\r\n    VE: { element: [\"wind\"], damage: [{ amount: 1, sides: 6, source: 'wind' }] },\r\n    LO: { element: [\"force\"], damage: [{ amount: 1, sides: 6, source: 'force' }] },\r\n    SU: {},\r\n    KO: { combine: true },\r\n    MU: { target: [\"ball\"] },\r\n    // RU: { target: [\"cone\"] },\r\n    LU: { target: [\"all\"] },\r\n\r\n}\r\n\r\nlet incompatibilities = {\r\n    TI: ['TI', 'VE', 'GA'],\r\n    FU: ['FU', 'GA', 'TI'],\r\n    GA: ['GA', 'FU', 'VE'],\r\n    VE: ['VE', 'TI', 'FU'],\r\n    LO: ['TI', 'VE', 'GA', 'FU', 'LO'],\r\n    SU: [],\r\n    KO: ['LO, SU'],\r\n    MU: ['SU'],\r\n    // RU: ['SU'],\r\n    LU: ['SU']\r\n}\r\n\r\nlet isCompatible = (rune, lastRune) => {\r\n    let filtered = incompatibilities[rune].filter(key => key === lastRune)\r\n    return filtered.length === 0\r\n}\r\n\r\nlet addRune = (spell, newSpell, rune) => {\r\n    for (let property in cypher[rune]) {\r\n        if (typeof newSpell[property] === \"boolean\") newSpell[property] = cypher[rune][property]\r\n        else newSpell[property] = [...spell[property], ...cypher[rune][property]]\r\n    }\r\n}\r\n\r\nlet craft = (spell, rune, lastRune) => {\r\n    let newSpell = { ...spell }\r\n    if (isCompatible(rune, lastRune)) addRune(spell, newSpell, rune)\r\n    return newSpell\r\n}\r\n\r\nlet shapes = {\r\n    single: \"bolt\",\r\n    all: 'rain',\r\n    self: 'armor',\r\n    cone: \"breath\",\r\n    ball: \"ball\",\r\n}\r\n\r\nlet combineElements = e => {\r\n    if (e.earth > 0) {\r\n        if (e.water > 0 && e.fire > 0 && e.wind === 0) return \"delta\"\r\n        else if (e.water > 0) return \"stone\"\r\n        else if (e.wind > 0) return \"sand\"\r\n        else if (e.fire > 0) return \"magma\"\r\n        else return \"earth\"\r\n    }\r\n    else if (e.fire > 0) {\r\n        if (e.water === 0 && e.earth > 0 && e.wind > 0) return \"delta\"\r\n        else if (e.water > 0) return \"frostfire\"\r\n        else if (e.wind > 0) return \"lightning\"\r\n        else return \"fire\"\r\n    }\r\n    else if (e.water > 0) {\r\n        if (e.fire === 0 && e.earth > 0 && e.wind > 0) return \"delta\"\r\n        else if (e.wind > 0) return \"ice\"\r\n        else return \"water\"\r\n    }\r\n    else if (e.wind > 0) {\r\n        if (e.fire > 0 && e.water > 0 && e.earth === 0) return \"delta\"\r\n        else return \"wind\"\r\n    }\r\n    else return \"force\"\r\n}\r\n\r\n\r\nlet discoverName = spell => {\r\n    let element = spell.element.filter(key => key !== \"force\")[0] || \"force\"\r\n    if (spell.combine === true) {\r\n        let e = {\r\n            earth: 0,\r\n            fire: 0,\r\n            water: 0,\r\n            wind: 0,\r\n            force: 0,\r\n        }\r\n        for (let i of spell.element) e[i] += 1\r\n\r\n        if (e.earth > 1 && e.fire > 1 && e.wind > 1 && e.water > 1) element = \"prismatic\"\r\n        else element = combineElements(e)\r\n    }\r\n\r\n    let shape = shapes[spell.target[spell.target.length - 1]]\r\n    return { element: element, shape: shape }\r\n}\r\n","import React from 'react'\r\nimport Overlay from './Overlay'\r\nimport { useSelector } from 'react-redux'\r\nimport { useSpellbook } from '../hooks/useSpellbook'\r\n\r\nlet Spellbook = () => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    let spellLength = useSelector(state => state.spellbook.length) + 2\r\n    let word = useSpellbook()\r\n    let maxWidth = viewBox.width * 4 / 5\r\n    let maxHeight = viewBox.height * 1 / 4\r\n    let letterSize = maxWidth / spellLength > 200 ? 200 : maxWidth / spellLength\r\n    let sizeProps = {\r\n        x: maxWidth / -2,\r\n        y: maxHeight / -2,\r\n        width: maxWidth,\r\n        height: maxHeight,\r\n        pointerEvents: \"none\",\r\n    }\r\n    let fade = () => (<animate className=\"spellLetter\" attributeName=\"opacity\" to=\"0\" begin=\"indefinite\" calcMode=\"discrete\" dur=\"0.1s\" fill='freeze' />)\r\n    return (\r\n        <>\r\n            <Overlay />\r\n            <rect\r\n                {...sizeProps}\r\n                fill=\"#1101AB\"\r\n                mask=\"url(#spellbook-mask)\">\r\n                {fade()}\r\n            </rect>\r\n            <rect\r\n                {...sizeProps}\r\n                filter=\"url(#spellbook-filter)\"\r\n                mask=\"url(#spellbook-mask)\">\r\n                {fade()}\r\n            </rect>\r\n            <rect\r\n                {...sizeProps}\r\n                stroke='white'\r\n                fill='transparent'\r\n                strokeWidth=\"30\"\r\n                mask=\"url(#spellbook-mask)\">\r\n                {fade()}\r\n            </rect>\r\n            {word.map((key, index) => (\r\n                <text\r\n                    key={`word${index}`}\r\n                    x={((index + 1) - word.length) * (letterSize / 2) + (index * letterSize) / 2}\r\n                    y=\"0\"\r\n                    textAnchor=\"middle\"\r\n                    alignmentBaseline=\"central\"\r\n                    fontSize={letterSize}\r\n                    fontFamily=\"Arial Black\">\r\n                    {key}\r\n                    <animate className=\"spellLetter\" attributeName=\"fill\" from=\"black\" to=\"white\" begin=\"indefinite\" dur=\"1s\" fill='freeze' />\r\n                </text>\r\n            ))}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Spellbook\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nlet SpellTitle = props => {\r\n    let strokeWidth = 10\r\n    let width = props.title.length * 50 + 100\r\n    let height = (75 + (strokeWidth * 2)) * 4 / 3\r\n    return (\r\n        <g>\r\n            <g>\r\n                <rect\r\n                    x={width / -2}\r\n                    y={-450 + height / -2}\r\n                    width={width}\r\n                    height={height}\r\n                    fill=\"#1101AB\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"10\"\r\n                >\r\n                </rect>\r\n                <text\r\n                    fill=\"white\"\r\n                    y=\"-450\"\r\n                    alignmentBaseline=\"central\"\r\n                    textAnchor=\"middle\"\r\n                    fontFamily=\"Arial Black\"\r\n                    fontSize=\"50\"\r\n                    fontVariant=\"small-caps\"\r\n                >\r\n                    {props.title}\r\n                </text>\r\n            </g>\r\n        </g>\r\n    )\r\n}\r\nlet Battle = () => {\r\n    let showTitle = useSelector(state => state.battle.showTitle)\r\n    let showStart = useSelector(state => state.battle.showStart)\r\n    let title = useSelector(state => state.battle.title)\r\n    useEffect(() => {\r\n    }, [showStart, showTitle, showStart])\r\n    return (\r\n        <g>\r\n            {(showStart) && <React.Fragment>\r\n                <g>\r\n                    <rect\r\n                        x=\"-250\"\r\n                        y=\"-100\"\r\n                        width=\"500\"\r\n                        height=\"200\"\r\n                        fill=\"black\">\r\n                    </rect>\r\n                    <text fill=\"white\" alignmentBaseline=\"central\" textAnchor=\"middle\" fontFamily=\"Arial Black\" fontSize=\"50\">BATTLE</text>\r\n                </g>\r\n            </React.Fragment>}\r\n            {(showTitle) && <SpellTitle title={title} />}\r\n        </g>\r\n\r\n    )\r\n}\r\nexport default Battle\r\n","import { useDispatch } from \"react-redux\"\r\nimport { updateTile } from \"../../redux/actions\"\r\nexport let useBlockTiles = () => {\r\n    let dispatch = useDispatch()\r\n    let tiles = {\r\n        block(...args) {\r\n            args.forEach(key => dispatch(updateTile({ ...key, blocked: true })))\r\n        },\r\n        unblock(...args) {\r\n            args.forEach(key => dispatch(updateTile({ ...key, blocked: false })))\r\n        }\r\n    }\r\n    return tiles\r\n}\r\n","let getAngle = (origin, target) => {\r\n    return Math.atan2(target.y - origin.y, target.x - origin.x)\r\n}\r\nlet Target = {\r\n    getAngle360: (origin, target) => {\r\n        let theta = Math.atan2(target.y - origin.y, target.x - origin.x)\r\n        theta = (theta > 0 ? theta : (2 * Math.PI + theta)) * 360 / (2 * Math.PI)\r\n        return theta * Math.PI / 180\r\n    },\r\n    getAngle: (origin, target) => {\r\n        return Math.atan2(target.y - origin.y, target.x - origin.x)\r\n    },\r\n    getVelocity: (origin, target, speed) => {\r\n        let theta = getAngle(origin, target)\r\n        return { x: speed * Math.cos(theta), y: speed * Math.sin(theta) }\r\n    },\r\n}\r\nexport default Target\r\n","/* eslint-disable no-unused-vars */\r\nimport { Engine, Events } from \"matter-js\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { setChatMessages } from \"../../redux/actions\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nlet engine = Engine.create()\r\nlet world = engine.world\r\nworld.timer = 0\r\nworld.gravity.y = 0\r\nexport let worldContext = React.createContext(world)\r\n    \r\n\r\nexport let useEngine = () => {\r\n    let [gameEngine, setGameEngine] = useState(engine)\r\n    let dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        function events() {\r\n            world.timer += 0.016666\r\n            world.timer = Math.round(world.timer * 100) / 100\r\n        }\r\n        function collisionEvents(e) {\r\n            e.pairs.forEach(key => collisionEffect(key))\r\n        }\r\n\r\n        function collisionEffect(obj) {\r\n            let pair = {}\r\n            pair[obj.bodyA.label] = obj.bodyA\r\n            pair[obj.bodyB.label] = obj.bodyB\r\n            let order = Object.keys(pair).sort().join(\"\")\r\n            switch (order) {\r\n                case \"AttackPlayer\": {\r\n                    let attack = pair[\"Attack\"]\r\n                    let player = pair[\"Player\"]\r\n                    let totalDamage = calcDamage(attack.damage, player)\r\n                    player.hp -= totalDamage\r\n                    let message = `${pair[\"Attack\"].name} attack dealt ${totalDamage} damage points to you!`\r\n                    dispatch(setChatMessages(message))\r\n                    break;\r\n                }\r\n                case \"EnemyExploding\": {\r\n                    pair[\"Exploding\"].explode(pair[\"Enemy\"].position)\r\n                    break;\r\n                }\r\n                case \"EnemySpell\": {\r\n                    let totalDamage = 0\r\n                    let spell = pair[\"Spell\"]\r\n                    let enemy = pair[\"Enemy\"]\r\n\r\n                    if (spell.combine) spell.damage.push(combinedExtraDamage)\r\n\r\n                    spell.damage.forEach(key => {\r\n                        totalDamage += calcDamage(key, enemy)\r\n                    })\r\n\r\n                    enemy.hp -= totalDamage\r\n                    spell.remove()\r\n                    if (enemy.hp <= 0) enemy.remove()\r\n\r\n                    let message = `${pair[\"Spell\"].name.element}${pair[\"Spell\"].name.shape} dealt ${totalDamage} damage points!`\r\n                    dispatch(setChatMessages(message))\r\n                    break;\r\n                }\r\n                default: return\r\n            }\r\n        }\r\n        Events.on(engine, \"beforeUpdate\", events)\r\n        Events.on(engine, \"collisionStart\", e => collisionEvents(e))\r\n\r\n        return () => {\r\n            Events.off(engine, \"beforeUpdate\", events)\r\n            Events.off(engine, \"collisionStart\", e => collisionEvents(e))\r\n        }\r\n    }, [dispatch])\r\n    return gameEngine\r\n}\r\n\r\nlet calcDamage = (source, receiver) => {\r\n    let totalSourceDamage = 0\r\n    for (let i = 0; i < source.amount; i++) {\r\n        totalSourceDamage += Math.ceil(Math.random() * source.sides)\r\n    }\r\n\r\n    return totalSourceDamage\r\n    //- RECEIVER RESISTANCES\r\n}\r\n\r\nlet combinedExtraDamage = {\r\n    source: \"force\",\r\n    amount: 2,\r\n    sides: 6,\r\n}\r\n","import { useContext, useRef, useEffect } from \"react\"\r\nimport { worldContext } from \"./useEngine\"\r\nexport let useCommon = () => {\r\n    let world = useContext(worldContext)\r\n    let intervals = useRef()\r\n    if (intervals.current === undefined) intervals.current = []\r\n    let fns = {\r\n        stepGen: function* () {\r\n            let value = 0\r\n            while (true) yield value++\r\n        },\r\n        timeout: function (callback, delay) {\r\n            let timeStamp = world.timer\r\n            let interval = setInterval(() => {\r\n                if (Math.abs(timeStamp - world.timer) * 1000 >= delay) {\r\n                    clearInterval(interval)\r\n                    callback()\r\n                }\r\n            }, 10)\r\n            intervals.current.push(interval)\r\n        },\r\n        timeoutNext: function (callback, next, delay){\r\n            fns.timeout(() =>{\r\n                callback()\r\n                next()\r\n            }, delay)\r\n        },\r\n        next: function (callback, next){\r\n            callback()\r\n            next()\r\n        },\r\n        fnTimeoutNext: function (fn, next, delay){\r\n            fn()\r\n            fns.timeout(next, delay)\r\n        },\r\n        searchByX: function (pos, arr) {\r\n            let i = Math.floor(arr.length / 2)\r\n            if (arr[i].x === pos.x) return arr[i]\r\n            if (i === 0) return -1\r\n            if (arr[i].x > pos.x) return fns.searchByX(pos, arr.slice(0, i))\r\n            if (arr[i].x < pos.x) return fns.searchByX(pos, arr.slice(i))\r\n        },\r\n        searchTile: function (pos, arr) {\r\n            let filtered = arr.filter(key => key.y === pos.y)\r\n            if (filtered.length === 0) return -1\r\n            return fns.searchByX(pos, filtered)\r\n        },\r\n        getDistance: function (origin, target) {\r\n            return Math.sqrt(Math.pow(target.x - origin.x, 2) + Math.pow(target.y - origin.y, 2))\r\n        },\r\n        searchID: function (id, arr) {\r\n            let i = Math.floor(arr.length / 2)\r\n            if (arr[i].id === id) return arr[i]\r\n            else if (arr[i].id > id) return fns.searchID(id, arr.slice(0, i))\r\n            else if (arr[i].id < id) return fns.searchID(id, arr.slice(i))\r\n        },\r\n        searchPlayer: function (arr) {\r\n            for (let i in arr) {\r\n                if (arr[i].label === \"Player\") return arr[i]\r\n                else return -1\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => intervals.current.forEach(key => clearInterval(key))\r\n    }, [])\r\n    return fns\r\n}\r\n\r\n","import { useEffect, useRef } from \"react\"\r\nimport { useBlockTiles } from \"./useBlockTiles\"\r\nimport { Body } from \"matter-js\"\r\nimport Target from \"../bodies/targeting\"\r\nimport { useCommon } from \"./useCommon\"\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\"\r\nimport {\r\n    showMove,\r\n    setPlayerPosition,\r\n    setPlayerAngle,\r\n    loadSpellbook,\r\n    showBattleMenu,\r\n    setPlayerMoved\r\n} from \"../../redux/actions\"\r\n\r\nexport let useMove = () => {\r\n    let dispatch = useDispatch()\r\n    let bodies = useSelector(state => state.world.bodies, shallowEqual)\r\n    let board = useSelector(state => state.world.board)\r\n    let spells = useSelector(state => state.spellbook.spells)\r\n    let player = useSelector(state => state.player)\r\n    let isBusy = useRef()\r\n    let t = useBlockTiles()\r\n    let common = useCommon()\r\n    useEffect(() => {\r\n        function cleanup() {\r\n            dispatch(showMove(false))\r\n            dispatch(showBattleMenu(true))\r\n        }\r\n        function onClick(e) {\r\n            if (isBusy.current !== true) {\r\n                if (player.moved && e.target.attributes.tile) {\r\n                    let playerBody = common.searchPlayer(bodies)\r\n                    let tile = board[e.target.attributes.tile.value]\r\n                    let position = { x: tile.x, y: tile.y }\r\n                    let angle = Target.getAngle(playerBody.position, position)\r\n                    Body.setAngle(playerBody, angle)\r\n                    dispatch(setPlayerAngle(angle))\r\n\r\n                    cleanup()\r\n                }\r\n                else if (e.target.attributes.tile) {\r\n                    isBusy.current = true\r\n                    window.removeEventListener(\"click\", onClick)\r\n                    let playerBody = common.searchPlayer(bodies)\r\n                    let tile = board[e.target.attributes.tile.value]\r\n                    if (tile.blocked && tile.x !== player.position.x && tile.y !== player.position.y) { return }\r\n                    let target = { x: tile.x, y: tile.y }\r\n\r\n                    t.unblock(common.searchTile(playerBody.position, board))\r\n                    move(playerBody, target, playerBody.moveSpeed, () => {\r\n                        dispatch(setPlayerPosition(playerBody.position))\r\n                        dispatch(setPlayerMoved(true))\r\n                        t.block(common.searchTile(playerBody.position, board))\r\n                        isBusy.current = false\r\n                        if (spells.length > 0) {\r\n                            let copySpells = [...spells]\r\n                            copySpells.forEach(key => key.origin = target)\r\n                            dispatch(loadSpellbook(copySpells))\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n        }\r\n        function move(player, target, n, callback) {\r\n            let tile = common.searchTile(player.position, board)\r\n            let remainingSteps = n\r\n            if (remainingSteps === 0) {\r\n                callback()\r\n                return\r\n            }\r\n            let connections = []\r\n            for (let i in tile.connections) {\r\n                if (!isBlocked(tile.connections[i])) connections.push([i, common.getDistance(tile.connections[i], target)])\r\n            }\r\n            let sorted = connections.sort((a, b) => a[1] - b[1])\r\n            if (remainingSteps < 2) sorted = sorted.filter(key => key[0] !== \"top\" && key[0] !== \"bot\" && key[0] !== \"left\" && key[0] !== \"right\")\r\n\r\n            if (common.getDistance(player.position, target) <= sorted[0][1]) {\r\n                return move(player, target, 0, callback)\r\n            }\r\n\r\n            let destination = sorted[0][0]\r\n\r\n            if (\r\n                destination === 'top' ||\r\n                destination === \"bot\" ||\r\n                destination === \"left\" ||\r\n                destination === \"right\") {\r\n                remainingSteps -= 2\r\n            }\r\n            else remainingSteps -= 1\r\n            player.move(tile.connections[destination], \r\n                () => move(player, target, remainingSteps, callback))\r\n        }\r\n\r\n        function isBlocked(pos) {\r\n            let target = common.searchTile(pos, board)\r\n            if (target === -1) return true\r\n            else return target.blocked\r\n        }\r\n\r\n\r\n        window.addEventListener(\"click\", onClick)\r\n        return () => {\r\n            window.removeEventListener(\"click\", onClick)\r\n        }\r\n    }, [spells, board, dispatch, t, player, common, bodies])\r\n}\r\n","import React from 'react'\r\nimport { useMove } from \"../hooks/useMove\"\r\n\r\nlet Move = () => {\r\n    useMove()\r\n    let strokeWidth = 10\r\n    let width = \"Move\".length * 50 + 100\r\n    let height = (75 + (strokeWidth * 2)) * 4 / 3\r\n    return (\r\n        <g>\r\n            <rect\r\n                x={800 + width / -2}\r\n                y={-450 + height / -2}\r\n                width={width}\r\n                height={height}\r\n                fill=\"#1101AB\"\r\n                stroke=\"white\"\r\n                strokeWidth={strokeWidth}\r\n            >\r\n            </rect>\r\n            <text\r\n                fill=\"white\"\r\n                x={800}\r\n                y=\"-450\"\r\n                alignmentBaseline=\"central\"\r\n                textAnchor=\"middle\"\r\n                fontFamily=\"Arial Black\"\r\n                fontSize=\"50\"\r\n                fontVariant=\"small-caps\"\r\n            >\r\n                MOVE\r\n            </text>\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Move\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector } from \"react-redux\"\r\n\r\nlet Chat = () => {\r\n    let messages = useSelector(state => state.chat.messages)\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    let fontSize = 20\r\n    useEffect(() => {\r\n        document.querySelector(\"#hideChatWindow\").beginElement()\r\n    }, [messages])\r\n    \r\n    return (\r\n        <g>  \r\n            <animate id=\"hideChatWindow\" attributeName=\"opacity\" to=\"0\" keyTimes=\"0;0.75;1\" values=\"1;1;0\" begin=\"indefinite\" fill=\"freeze\" dur=\"4s\"/>\r\n            <animate id=\"showChatWindow\" attributeName=\"opacity\" to=\"1\" begin=\"indefinite\" fill=\"freeze\" dur=\"0.1s\" calcMode=\"discrete\"/>\r\n            <rect\r\n                x={viewBox.width / -2}\r\n                width={viewBox.width / 3.33}\r\n                y={viewBox.height / 3.33}\r\n                height={viewBox.height / 4}\r\n                fill=\"black\"\r\n                opacity=\"0.3\"\r\n                onMouseOver={() => document.querySelector(\"#showChatWindow\").beginElement()}\r\n                onMouseLeave={() => document.querySelector(\"#hideChatWindow\").beginElement()}/>\r\n            {messages.map((key, index) => (\r\n                <text\r\n                    key={`message${index}`}\r\n                    x={viewBox.width / -2 + fontSize}\r\n                    y={(viewBox.height / 2) - (fontSize * 1.5 * (messages.length - index))}\r\n                    alignmentBaseline=\"middle\"\r\n                    fill=\"white\"\r\n                    fontFamily=\"Arial Black\"\r\n                    fontSize={fontSize}\r\n                    pointerEvents=\"none\" >\r\n                    {key}\r\n                </text>\r\n            ))}\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { showMove, showBattleMenu, showSpellbook } from '../../redux/actions'\r\nlet BattleMenuText = props => {\r\n    return (\r\n        <g>\r\n            <text\r\n                x={props.x}\r\n                y={props.y}\r\n                alignmentBaseline=\"central\"\r\n                fontFamily=\"Arial Black\"\r\n                fontSize=\"30\"\r\n                fill=\"white\"\r\n                pointerEvents=\"none\">\r\n                {props.children}\r\n            </text>\r\n            <rect onClick={props.onClick} width={props.width} height={props.height} x={props.x} y={props.y + props.height / -2} fill=\"transparent\" />\r\n        </g>\r\n    )\r\n}\r\nlet BattleMenu = () => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    let next = useSelector(state => state.battle.next)\r\n    let dispatch = useDispatch()\r\n    function move() {\r\n        dispatch(showMove(true))\r\n        dispatch(showBattleMenu(false))\r\n    }\r\n    function cast() {\r\n        dispatch(showSpellbook(true))\r\n        dispatch(showBattleMenu(false))\r\n    }\r\n    function end() {\r\n        dispatch(showBattleMenu(false))\r\n        next()\r\n    }\r\n    return (\r\n        <>\r\n            <rect\r\n                width={viewBox.width / 4}\r\n                height={240}\r\n                x={viewBox.width / -2 + 10}\r\n                fill=\"green\"\r\n                stroke=\"white\"\r\n                opacity=\"0.5\"\r\n                strokeWidth=\"10\"\r\n            />\r\n            <BattleMenuText onClick={move} height={60} width={viewBox.width / 4 - 100} x={viewBox.width / -2 + 50} y={60}>MOVE</BattleMenuText>\r\n            <BattleMenuText onClick={cast} height={60} width={viewBox.width / 4 - 100} x={viewBox.width / -2 + 50} y={120}>PREPARE SPELL</BattleMenuText>\r\n            <BattleMenuText onClick={end} height={60} width={viewBox.width / 4 - 100} x={viewBox.width / -2 + 50} y={180}>CAST SPELL</BattleMenuText>\r\n        </>\r\n    )\r\n}\r\nexport default BattleMenu\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useCommon } from \"../hooks/useCommon\"\r\nimport { setBattleResult } from '../../redux/actions'\r\n\r\nlet Result = () => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    let result = useSelector(state => state.battle.result)\r\n    let common = useCommon()\r\n    let dispatch = useDispatch()\r\n    let width = viewBox.width / 2\r\n    let height = viewBox.height / 4\r\n    let fontSize = height * 9 / 10\r\n    useEffect(() => {\r\n        common.timeout(() => dispatch(setBattleResult(null)), 5000)\r\n    }, [common, dispatch])\r\n    \r\n    switch (result) {\r\n        case \"Victory\": return (\r\n            <g>\r\n                <rect\r\n                    width={width}\r\n                    height={height}\r\n                    x={width / -2}\r\n                    y={height / -2}\r\n                    fill=\"#1101AB\"\r\n                    opacity=\"0.5\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"30\">\r\n                </rect>\r\n                <TitleText maxWidth={width} fontSize={fontSize} text=\"VICTORY!\" />\r\n            </g>\r\n        )\r\n        case \"Defeat\": return (\r\n            <g>\r\n                <rect\r\n                    width={width}\r\n                    height={height}\r\n                    x={width / -2}\r\n                    y={height / -2}\r\n                    fill=\"maroon\"\r\n                    opacity=\"0.5\"\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"30\">\r\n                </rect>\r\n                <TitleText maxWidth={width} fontSize={fontSize} text=\"DEFEAT\" />\r\n            </g>\r\n        )\r\n        default: return <></>\r\n    }\r\n}\r\n\r\nlet TitleText = props => {\r\n    let common = useCommon()\r\n    useEffect(() => {\r\n        let titleNodeList = document.querySelectorAll(\".result-text-character\")\r\n        titleNodeList.forEach((key, index) => {\r\n            common.timeout(() => key.beginElement(), index * 150)\r\n        })\r\n    }, [common])\r\n    let fontSize = props.fontSize * props.text.length > props.maxWidth ? props.maxWidth / (props.text.length + 2) : props.fontSize\r\n    let text = props.text.split(\"\")\r\n    return text.map((key, index) => (\r\n        <text\r\n            key={`result-title${index}`}\r\n            fontFamily=\"Arial Black\"\r\n            alignmentBaseline=\"central\"\r\n            textAnchor=\"middle\"\r\n            fill=\"white\"\r\n            opacity=\"0\"\r\n            pointerEvents=\"none\"\r\n            fontSize={fontSize}\r\n            x={(fontSize * text.length / -2) + (fontSize * index) + fontSize / 2}>\r\n            {key}\r\n            <animate className=\"result-text-character\" attributeName=\"opacity\" to=\"1\" dur=\"0.1s\" calcMode=\"discrete\" begin=\"indefinite\" fill=\"freeze\" />\r\n        </text>\r\n    ))\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\"\r\nimport Menu from \"./UI/Menu\"\r\nimport Spellbook from \"./UI/Spellbook\"\r\nimport Battle from \"./UI/Battle\"\r\nimport Move from \"./UI/Move\"\r\nimport Chat from \"./UI/Chat\"\r\nimport BattleMenu from './UI/BattleMenu'\r\nimport Result from \"./UI/Result\"\r\n\r\nlet UI = () => {\r\n    let pause = useSelector(state => state.screen.pause)\r\n    let spellbook = useSelector(state => state.spellbook.show)\r\n    let battle = useSelector(state => state.battle.show)\r\n    let move = useSelector(state => state.move.show)\r\n    let showScenario = useSelector(state => state.world.showScenario)\r\n    let battleMenu = useSelector(state => state.battle.showMenu)\r\n    let result = useSelector(state => state.battle.result)\r\n    return (\r\n        <React.Fragment>\r\n            {(battle) && <Battle />}\r\n            {(spellbook) && <Spellbook />}\r\n            {(move) && <Move />}\r\n            {(battleMenu) && <BattleMenu />}\r\n            {(showScenario) && <Chat />}\r\n            {(pause) && <Menu />}\r\n            {(result) && <Result />}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UI\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nlet Board = props => {\r\n    let { height, width } = { ...props.viewBox }\r\n    \r\n    return (\r\n        <g>\r\n            <path\r\n                fill=\"rgb(5,0,5)\"\r\n                opacity=\"1\"\r\n                filter=\"url(#shadow-blur)\"\r\n                d={`M 0 ${height / -2 + 100}L ${width / 2 - 50} 50 L 0 ${height / 2} L ${width / -2 + 50} 50 Z`}\r\n            />\r\n            <path\r\n                // fill=\"white\"\r\n                fill=\"transparent\"\r\n                d={`M 0 ${height / -2 + 50}L ${width / 2 - 50} 0 L 0 ${height / 2 - 50} L ${width / -2 + 50} 0 Z`}\r\n            />\r\n        </g>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        viewBox: state.screen.viewBox\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Board)\r\n","import React from 'react'\r\n\r\nlet Tile = React.memo(props => {\r\n    return (\r\n        <path\r\n            id={props.id}\r\n            fill={props.fill}\r\n            tile={props.tile}\r\n            opacity={props.opacity}\r\n            stroke=\"darkgreen\"\r\n            strokeWidth=\"5\"\r\n            transform=\"translate(0 -1000)\"\r\n            d={`\r\n                M ${props.x - props.width / 2} ${props.y}\r\n                L ${props.x} ${props.y - props.height / 2}\r\n                L ${props.x + props.width / 2} ${props.y}\r\n                L ${props.x} ${props.y + props.height / 2}\r\n                Z`}>\r\n            <animate\r\n                attributeName=\"opacity\"\r\n                begin=\"mouseover\"\r\n                to=\"0.75\"\r\n                dur=\"0.01s\"\r\n                fill=\"freeze\" />\r\n            <animate\r\n                attributeName=\"opacity\"\r\n                to=\"0.5\"\r\n                begin=\"mouseleave\"\r\n                from=\"0.75\"\r\n                dur=\"0.01s\"\r\n                fill=\"freeze\" />\r\n            <animateTransform\r\n                className=\"board-tiles-fall\"\r\n                attributeName=\"transform\"\r\n                type=\"translate\"\r\n                to=\"0 0\"\r\n                calcMode=\"spline\"\r\n                keyTimes=\"0;1\"\r\n                keySplines={`${Math.random()} ${Math.random()} ${Math.random()} ${Math.random()}`}\r\n                dur=\"2.5s\"\r\n                begin=\"indefinite\"\r\n                fill=\"freeze\" />\r\n        </path>\r\n    )\r\n})\r\n\r\nexport default Tile\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Tile from \"./Tile\"\r\n\r\nlet Grid = props => {\r\n    useEffect(() => {\r\n        document.querySelectorAll(\".board-tiles-fall\").forEach(key => key.beginElement())\r\n    }, [])\r\n    return (\r\n        props.board.map((key, index) => (\r\n            <Tile\r\n                key={`tile${index}`}\r\n                id={`square${index}`}\r\n                tile={index}\r\n                width={key.width}\r\n                height={key.height}\r\n                fill=\"green\"\r\n                opacity=\"0.5\"\r\n                x={key.x}\r\n                y={key.y}\r\n            />)))\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        viewBox: state.screen.viewBox,\r\n        board: state.world.board\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Grid)\r\n","import React, { useEffect } from 'react'\r\nimport { useCommon } from '../hooks/useCommon'\r\n\r\nlet StartButton = props => {\r\n    let opacityId = \"opacity-start-button\"\r\n    let scaleYId = \"scale-y-start-button\"\r\n    let scaleXId = \"scale-x-start-button\"\r\n    let textId = \"opacity-text-start-button\"\r\n    let common = useCommon()\r\n    useEffect(() => {\r\n        common.timeout(() => document.querySelector(`#${opacityId}`).beginElement(), 2500)\r\n        common.timeout(() => document.querySelector(`#${scaleYId}`).beginElement(), 2550)\r\n        common.timeout(() => document.querySelector(`#${scaleXId}`).beginElement(), 2700)\r\n        common.timeout(() => document.querySelector(`#${textId}`).beginElement(), 3200)\r\n    }, [opacityId, scaleYId, scaleXId, textId, common])\r\n    return (\r\n        <g>\r\n            <rect\r\n                fill=\"blue\"\r\n                opacity=\"0\"\r\n                width=\"200\" height=\"50\" x=\"-100\" y=\"-25\"\r\n                transform=\"scale(0 0)\"\r\n                onClick={props.onClick}>\r\n                <animate begin=\"mouseenter\" attributeName=\"fill\" to=\"rgb(70, 45, 255)\" id=\"hover\" fill=\"freeze\" dur=\".1s\" calcMode=\"discrete\" />\r\n                <animate begin=\"mouseleave\" attributeName=\"fill\" to=\"blue\" id=\"leaveHover\" fill=\"freeze\" dur=\".1s\" calcMode=\"discrete\" />\r\n                <animateTransform\r\n                    id={scaleYId}\r\n                    attributeName=\"transform\"\r\n                    type=\"scale\"\r\n                    to=\"0 5\"\r\n                    begin=\"indefinite\"\r\n                    fill=\"freeze\"\r\n                    additive=\"sum\"\r\n                    dur=\".25s\"\r\n                />\r\n                <animate\r\n                    id={opacityId}\r\n                    attributeName=\"opacity\"\r\n                    to=\"1\"\r\n                    begin=\"indefinite\"\r\n                    fill=\"freeze\"\r\n                    dur=\"0.1s\"\r\n                    calcMode=\"discrete\"\r\n                />\r\n\r\n                <animateTransform\r\n                    id={scaleXId}\r\n                    attributeName=\"transform\"\r\n                    type=\"scale\"\r\n                    to=\"5 5\"\r\n                    begin=\"indefinite\"\r\n                    fill=\"freeze\"\r\n                    additive=\"replace\"\r\n                    dur=\".5s\"\r\n                />\r\n            </rect>\r\n            <text\r\n                fontFamily=\"Cinzel Decorative\"\r\n                textAnchor=\"middle\"\r\n                alignmentBaseline=\"central\"\r\n                fontSize=\"75\"\r\n                fill=\"white\"\r\n                opacity=\"0\">\r\n                BATTLE START\r\n                <animate\r\n                    id={textId}\r\n                    attributeName=\"opacity\"\r\n                    to=\"1\"\r\n                    begin=\"indefinite\"\r\n                    calcMode=\"discrete\"\r\n                    dur=\".1s\"\r\n                    fill='freeze'\r\n                />\r\n            </text>\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default StartButton\r\n","import { Body, Bodies, World } from 'matter-js'\r\nimport Target from \"./targeting\"\r\n\r\nexport class GameBody {\r\n    constructor(world) {\r\n        this.intervals = []\r\n        this.body = Bodies.circle(0, 0, 5)\r\n        this.add = () => World.add(world, this.body)\r\n        this.remove = () => {\r\n            World.remove(world, this.body)\r\n            for (let i in this.intervals) clearInterval(this.intervals[i])\r\n            for (let property in this) delete this[property]\r\n        }\r\n\r\n        this.timeout = (callback, delay) => {\r\n            let timeStamp = world.timer\r\n            let interval = setInterval(() => {\r\n                if (Math.abs(timeStamp - world.timer) * 1000 >= delay) {\r\n                    callback()\r\n                    clearInterval(interval)\r\n                }\r\n            }, 10)\r\n            this.intervals.push(interval)\r\n        }\r\n    }\r\n    checkIfInArea = (currentPosition, targetPosition, errorRange) => {\r\n        return Math.abs(targetPosition - currentPosition) < errorRange\r\n    }\r\n\r\n    move = (target, callback) => {\r\n        let speed = 8\r\n        if (this.body.isStatic) Body.setStatic(this.body, false)\r\n        if (this.checkIfInArea(this.body.position.x, target.x, speed) && this.checkIfInArea(this.body.position.y, target.y, speed)) {\r\n            Body.setVelocity(this.body, { x: 0, y: 0 })\r\n            Body.setPosition(this.body, target)\r\n            Body.setStatic(this.body, true)\r\n            if (callback) callback()\r\n        }\r\n        else {\r\n            let velocity = Target.getVelocity(this.body.position, target, speed)\r\n            Body.setVelocity(this.body, velocity)\r\n            this.timeout(() => this.move(target, callback), 20)\r\n        }\r\n    }\r\n}\r\n","import { GameBody } from \".\";\r\nimport { Bodies } from \"matter-js\";\r\n\r\nexport class Slash extends GameBody {\r\n    constructor(target, damage, world, callback) {\r\n        super(world);\r\n        this.body = Bodies.circle(target.x + 45, target.y - 27, 5, {\r\n            label: \"Attack\",\r\n            isSensor: true,\r\n            name: \"Slash\",\r\n            damage: damage,\r\n            remove: this.remove,\r\n            move: this.move,\r\n        })\r\n        this.add()\r\n        this.move({ x: target.x - 45, y: target.y + 27 },\r\n            () => {\r\n                callback()\r\n                this.remove()\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport class Shot extends GameBody {\r\n    constructor(origin, target, damage, world, callback) {\r\n        super(world);\r\n        this.body = Bodies.circle(origin.x, origin.y, 5, {\r\n            label: \"Attack\",\r\n            isSensor: true,\r\n            name: \"Shot\",\r\n            damage: damage,\r\n            remove: this.remove,\r\n            move: this.move,\r\n        })\r\n        this.add()\r\n        this.move(target,\r\n            () => {\r\n                callback()\r\n                this.remove()})\r\n    }\r\n}\r\n\r\n\r\n","import { GameBody } from \"./index\"\r\nimport { Bodies, Body } from \"matter-js\";\r\nimport Target from \"./targeting\";\r\n\r\nexport class Bolt extends GameBody {\r\n    constructor(origin, target, damage, name, meta, world, callback) {\r\n        super(world);\r\n        this.fade = () => {\r\n            callback()\r\n            this.remove()\r\n        }\r\n        this.body = Bodies.circle(origin.x, origin.y, 10, {\r\n            label: \"Spell\",\r\n            name: name,\r\n            isSensor: true,\r\n            damage: damage,\r\n            remove: this.fade,\r\n            ...meta\r\n        })\r\n        this.add()\r\n        this.timeout(() => Body.setVelocity(this.body, Target.getVelocity(origin, target, 30)), 1000)\r\n        this.timeout(this.fade, 5000)\r\n    }\r\n}\r\n\r\nexport class Explosion extends GameBody {\r\n    constructor(origin, damage, name, meta, world, callback) {\r\n        super(world);\r\n        this.fade = () => {\r\n            this.timeout(() => {\r\n                callback()\r\n                this.remove()\r\n            }, 2000)\r\n        }\r\n        this.body = Bodies.circle(origin.x, origin.y, 150, {\r\n            label: \"Spell\",\r\n            name: name,\r\n            isSensor: true,\r\n            damage: damage,\r\n            remove: this.fade,\r\n            ...meta\r\n        })\r\n        this.add()\r\n        this.timeout(this.fade, 5000)\r\n    }\r\n}\r\nexport class Exploding extends GameBody {\r\n    constructor(origin, target, damage, name, meta, world, callback) {\r\n        super(world);\r\n        this.explode = position => {\r\n            new Explosion(position, damage, name, meta, world, callback)\r\n            this.remove()\r\n        }\r\n\r\n        this.body = Bodies.circle(origin.x, origin.y, 10, {\r\n            label: \"Exploding\",\r\n            name: name,\r\n            isSensor: true,\r\n            damage: damage,\r\n            explode: this.explode,\r\n        })\r\n        this.add()\r\n\r\n        this.timeout(() => Body.setVelocity(this.body, Target.getVelocity(origin, target, 20)), 1000)\r\n    }\r\n}\r\n\r\nexport class Rain extends GameBody {\r\n    constructor(origin, damage, name, meta, world) {\r\n        super(world);\r\n        this.fade = () => this.timeout(this.remove, 3000)\r\n        this.body = Bodies.circle(origin.x, origin.y, 10, {\r\n            label: \"Spell\",\r\n            name: name,\r\n            isSensor: true,\r\n            damage: damage,\r\n            remove: this.fade,\r\n            ...meta\r\n        })\r\n        this.add()\r\n        this.timeout(this.animate, 0)\r\n    }\r\n    animate = () => {\r\n        let $body = document.querySelector(`#rain${this.body.id}`)\r\n        if ($body !== undefined && $body !== null) $body.beginElement()\r\n    }\r\n}\r\n","import { useCommon } from \"./useCommon\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { showBattleMenu, battlePhaseForceNext, loadSpellbook } from '../../redux/actions'\r\nimport { showBattle, setPlayerMoved } from \"../../redux/actions\"\r\nimport { useContext, useRef } from \"react\"\r\nimport { worldContext } from \"./useEngine\"\r\nimport { useBlockTiles } from \"./useBlockTiles\"\r\nimport { Slash, Shot } from \"../bodies/attacks\"\r\nimport { useShowSpellTitle, useMakeSpellBody } from \"./BattleHooks\"\r\nimport { Body } from \"matter-js\"\r\nimport Target from \"../bodies/targeting\"\r\n\r\nexport let usePhase = () => {\r\n    let common = useCommon()\r\n    let t = useBlockTiles()\r\n    let world = useContext(worldContext)\r\n    let board = useRef()\r\n    board.current = useSelector(state => state.world.board)\r\n    let spells = useRef()\r\n    spells.current = useSelector(state => state.spellbook.spells)\r\n    let player = useRef()\r\n    player.current = useSelector(state => state.player)\r\n    let dispatch = useDispatch()\r\n    let spellTitle = useShowSpellTitle()\r\n    let spellBody = useMakeSpellBody()\r\n    let phase = {\r\n        start: function (nextPhase) {\r\n            dispatch(showBattle(true))\r\n            nextPhase()\r\n\r\n        },\r\n        enemy: function (enemy, nextPhase) {\r\n            let g = common.stepGen()\r\n            let next = () => schedule[g.next().value]()\r\n            let schedule = [\r\n                () => movePhase(enemy, next),\r\n                () => attackPhase(enemy, next),\r\n                nextPhase\r\n            ]\r\n            next()\r\n        },\r\n        player: function (nextPhase) {\r\n            let g = common.stepGen()\r\n            let next = () => schedule[g.next().value]()\r\n            dispatch(battlePhaseForceNext(next))\r\n            let schedule = [() => dispatch(showBattleMenu(true)), nextPhase]\r\n            next()\r\n        },\r\n        cast: function (nextPhase) {\r\n            let g = common.stepGen()\r\n            let next = () => schedule[g.next().value]()\r\n            let spellList = spells.current.map(key => [() => spellTitle(key, next), () => spellBody(key, next)])\r\n            let schedule = [...spellList.flat(), nextPhase]\r\n            next()\r\n        },\r\n        cleanup: function (nextPhase) {\r\n            dispatch(setPlayerMoved(false))\r\n            dispatch(loadSpellbook([]))\r\n            nextPhase()\r\n        }\r\n    }\r\n    return phase\r\n\r\n    function attackPhase(enemy, callback) {\r\n        if (enemy.hp > 0 && enemy.damage.amount > 0) {\r\n            switch (enemy.behaviour) {\r\n                case \"Melee\": {\r\n                    if (common.getDistance(enemy.position, player.current.position) < 135) {\r\n                        new Slash(player.current.position, enemy.damage, world, callback)\r\n                    }\r\n                    else callback()\r\n                    break;\r\n                }\r\n                case \"Ranged\": {\r\n                    new Shot(enemy.position, player.current.position, enemy.damage, world, callback)\r\n                    break;\r\n                }\r\n                default: return\r\n\r\n            }\r\n        } else callback()\r\n\r\n    }\r\n\r\n    function movePhase(enemy, callback) {\r\n        if (enemy.hp > 0) {\r\n            t.unblock(common.searchTile(enemy.position, board.current))\r\n            walk(enemy, enemy.moveSpeed, callback)\r\n        }\r\n        else callback()\r\n    }\r\n\r\n    function walk(enemy, n, callback) {\r\n        let remainingSteps = n\r\n        if (remainingSteps === 0) {\r\n            Body.setAngle(enemy, Target.getAngle(enemy.position, player.current.position))\r\n            t.block(common.searchTile(enemy.position, board.current))\r\n            common.timeout(callback, 500)\r\n            return\r\n        }\r\n        let tile = common.searchTile(enemy.position, board.current)\r\n        let connections = []\r\n        for (let i in tile.connections) {\r\n            if (!isBlocked(tile.connections[i])) connections.push([i, common.getDistance(tile.connections[i], player.current.position)])\r\n        }\r\n        let sorted = connections.sort((a, b) => a[1] - b[1])\r\n\r\n        switch (enemy.behaviour) {\r\n            case \"Ranged\": {\r\n                sorted.reverse()\r\n                if (common.getDistance(enemy.position, player.current.position) >= sorted[0][1]) {\r\n                    remainingSteps = 0\r\n                    return walk(enemy, remainingSteps, callback)\r\n\r\n                }\r\n                break;\r\n            }\r\n            case \"Melee\": {\r\n                if (common.getDistance(enemy.position, player.current.position) <= sorted[0][1]) {\r\n                    remainingSteps = 0\r\n                    return walk(enemy, remainingSteps, callback)\r\n                }\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n        if (remainingSteps < 2) sorted = sorted.filter(key => key[0] !== \"top\" && key[0] !== \"bot\" && key[0] !== \"left\" && key[0] !== \"right\")\r\n        let destination = sorted[0][0]\r\n        if (\r\n            destination === 'top' ||\r\n            destination === \"bot\" ||\r\n            destination === \"left\" ||\r\n            destination === \"right\") {\r\n            remainingSteps -= 2\r\n        }\r\n        else remainingSteps -= 1\r\n        enemy.move(tile.connections[destination], () => walk(enemy, remainingSteps, callback))\r\n    }\r\n\r\n    function isBlocked(pos) {\r\n        let target = common.searchTile(pos, board.current)\r\n        if (target === -1) return true\r\n        else return target.blocked\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { setBattleResult, setPlayerMoved, updatePage, loadSpellbook } from \"../../redux/actions\"\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\"\r\nimport { useCommon } from \"./useCommon\"\r\nimport { setBattleTitle, showBattleTitle, showStartButton, updateFight, showScenario, showBattle } from \"../../redux/actions\"\r\nimport { Bolt, Exploding, Rain } from '../bodies/spells'\r\nimport { worldContext } from \"./useEngine\"\r\nimport { useContext, useRef } from \"react\"\r\n\r\nexport let useSetResult = () => {\r\n    let dispatch = useDispatch()\r\n    let common = useCommon()\r\n    let currentPage = useSelector(state => state.world.currentPage)\r\n    let world = useContext(worldContext)\r\n    let result = {\r\n        victory: () => {\r\n            dispatch(setBattleResult(\"Victory\"))\r\n            common.timeout(() => {\r\n                dispatch(setPlayerMoved(false))\r\n                dispatch(updateFight(currentPage))\r\n                dispatch(updatePage(currentPage + 1))\r\n                dispatch(loadSpellbook([]))\r\n                dispatch(setBattleResult(null))\r\n                dispatch(showBattle(false))\r\n                for (let i = world.bodies.length - 1; i >= 0; i--) world.bodies[i].remove()\r\n            }, 2000)\r\n            common.timeout(() => {\r\n                dispatch(loadSpellbook([]))\r\n                dispatch(showScenario(false))\r\n                dispatch(showStartButton(true))\r\n            }, 2500)\r\n        },\r\n        defeat: () => {\r\n            dispatch(setBattleResult(\"Defeat\"))\r\n            common.timeout(() => {\r\n                dispatch(setPlayerMoved(false))\r\n                dispatch(setBattleResult(null))\r\n                dispatch(showBattle(false))\r\n                for (let i = world.bodies.length - 1; i >= 0; i--) world.bodies[i].remove()\r\n            }, 2000)\r\n            common.timeout(() => {\r\n                dispatch(showScenario(false))\r\n                dispatch(showStartButton(true))\r\n            }, 2500)\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport let useShowSpellTitle = () => {\r\n    let common = useCommon()\r\n    let dispatch = useDispatch()\r\n    function show(spell, nextPhase) {\r\n        let g = common.stepGen()\r\n        let next = () => schedule[g.next().value]()\r\n        let schedule =\r\n            [\r\n                () => common.next(() => dispatch(setBattleTitle(spell.name.element[0].toUpperCase() + spell.name.element.slice(1) + spell.name.shape)), next),\r\n                () => common.fnTimeoutNext(() => dispatch(showBattleTitle(true)), next, 500),\r\n                () => common.fnTimeoutNext(() => dispatch(showBattleTitle(false)), next, 500),\r\n                nextPhase,\r\n            ]\r\n        next()\r\n    }\r\n\r\n    return show\r\n}\r\n\r\nexport let useMakeSpellBody = () => {\r\n    let bodies = useSelector(state => state.world.bodies, shallowEqual)\r\n    let player = useRef()\r\n    player.current = useSelector(state => state.player)\r\n    let world = useContext(worldContext)\r\n    let common = useCommon()\r\n    function make(spell, next) {\r\n        let target = {\r\n            x: player.current.position.x + Math.cos(player.current.angle),\r\n            y: player.current.position.y + Math.sin(player.current.angle),\r\n        }\r\n        let meta = {\r\n            maximize: spell.maximize,\r\n            empower: spell.empower,\r\n            combine: spell.combine\r\n        }\r\n        switch (spell.target[spell.target.length - 1]) {\r\n            case \"single\": {\r\n                new Bolt(spell.origin, target, spell.damage, spell.name, meta, world, next)\r\n                break;\r\n            }\r\n            case \"ball\": {\r\n                new Exploding(spell.origin, target, spell.damage, spell.name, meta, world, next)\r\n                break;\r\n            }\r\n            case \"all\": {\r\n                bodies.forEach(key => {\r\n                    if (key.label === \"Enemy\") new Rain(key.position, spell.damage, spell.name, meta, world)\r\n                })\r\n                common.timeout(next, 3000)\r\n                break;\r\n            }\r\n            default: return\r\n        }\r\n    }\r\n\r\n    return make\r\n}\r\n","import { GameBody } from '.';\r\nimport { Bodies } from 'matter-js'\r\nclass Player extends GameBody {\r\n    constructor(origin, hp, speed, world) {\r\n        super(world);\r\n        this.body = Bodies.circle(origin.x, origin.y, 30, { \r\n            label: \"Player\", \r\n            isStatic: true, \r\n            hp: hp,\r\n            maxHP: hp,\r\n            moveSpeed: speed,\r\n            remove: this.remove,\r\n            move: this.move\r\n        })\r\n    }\r\n}\r\n\r\nexport default Player\r\n","import { GameBody } from '.';\r\nimport { Bodies } from 'matter-js'\r\n\r\nclass Enemy extends GameBody {\r\n    constructor(origin, hp, speed, world) {\r\n        super(world);\r\n        this.body = Bodies.circle(origin.x, origin.y, 30, {\r\n            name: \"Enemy\",\r\n            label: \"Enemy\",\r\n            isStatic: true,\r\n            hp: hp,\r\n            maxHP: hp,\r\n            moveSpeed: speed,\r\n            remove: this.remove,\r\n            move: this.move\r\n        })\r\n    }\r\n}\r\n\r\nclass Skeleton extends GameBody {\r\n    constructor(origin, world) {\r\n        super(world);\r\n        this.body = Bodies.circle(origin.x, origin.y, 30, {\r\n            name: \"Skeleton\",\r\n            label: \"Enemy\",\r\n            isStatic: true,\r\n            damage: { amount: 3, sides: 6, element: \"force\" },\r\n            behaviour: \"Melee\",\r\n            hp: 30,\r\n            maxHP: 30,\r\n            moveSpeed: 2,\r\n            remove: this.remove,\r\n            move: this.move,\r\n        })\r\n    }\r\n}\r\n\r\nclass Warg extends GameBody {\r\n    constructor(origin, world) {\r\n        super(world);\r\n        this.body = Bodies.circle(origin.x, origin.y, 30, {\r\n            name: \"Warg\",\r\n            label: \"Enemy\",\r\n            isStatic: true,\r\n            damage: { amount: 2, sides: 10, element: \"force\" },\r\n            behaviour: \"Melee\",\r\n            hp: 50,\r\n            maxHP: 50,\r\n            moveSpeed: 4,\r\n            remove: this.remove,\r\n            move: this.move,\r\n        })\r\n    }\r\n}\r\n\r\nclass Elf extends GameBody {\r\n    constructor(origin, world) {\r\n        super(world);\r\n        this.body = Bodies.circle(origin.x, origin.y, 30, {\r\n            name: \"Elf\",\r\n            label: \"Enemy\",\r\n            isStatic: true,\r\n            damage: { amount: 1, sides: 10, element: \"force\" },\r\n            behaviour: \"Ranged\",\r\n            hp: 25,\r\n            maxHP: 25,\r\n            moveSpeed: 3,\r\n            remove: this.remove,\r\n            move: this.move\r\n        })\r\n    }\r\n}\r\n\r\nclass Statue extends GameBody {\r\n    constructor(origin, world) {\r\n        super(world)\r\n        this.body = Bodies.circle(origin.x, origin.y, 30, {\r\n            name: \"Stone Statue\",\r\n            label: \"Enemy\",\r\n            isStatic: true,\r\n            damage: { amount: 0, sides: 0, element: \"force\" },\r\n            behaviour: \"Melee\",\r\n            hp: 25,\r\n            maxHP: 25,\r\n            moveSpeed: 0,\r\n            remove: this.remove,\r\n            move: this.move\r\n        })\r\n    }\r\n}\r\nexport default { Enemy, Skeleton, Warg, Elf, Statue }\r\n","import { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEndTurn } from \"../hooks/useEndTurn\"\r\nimport { useContext } from \"react\"\r\nimport { worldContext } from \"../hooks/useEngine\"\r\nimport { useBlockTiles } from \"../hooks/useBlockTiles\"\r\nimport { Body } from \"matter-js\"\r\nimport { setPlayerPosition, setPlayerAngle, showStartButton, setSpellbookLength } from \"../../redux/actions\"\r\nimport Player from '../bodies/player'\r\nimport Enemy from '../bodies/enemies'\r\nimport { useSetResult } from \"../hooks/BattleHooks\"\r\n\r\nexport let useScene = () => {\r\n    let currentPage = useSelector(state => state.world.currentPage)\r\n    let player = useSelector(state => state.player)\r\n    let board = useSelector(state => state.world.board)\r\n    let world = useContext(worldContext)\r\n    let allFights = useSelector(state => state.world.fights)\r\n    let dispatch = useDispatch()\r\n    let setResult = useSetResult()\r\n    let tiles = useBlockTiles()\r\n    let battle = useEndTurn(setResult)\r\n\r\n    function start() {\r\n        dispatch(showStartButton(false))\r\n        fights[allFights[currentPage]].start(player, board, tiles, world, dispatch)\r\n        setTimeout(battle, 500)\r\n    }\r\n    return start\r\n}\r\n\r\nlet fights = {\r\n    \"training\": {\r\n        start: (player, board, tiles, world, dispatch) => {\r\n            let playerStart = { ...board[51] }\r\n            let enemyStart = { ...board[12] }\r\n            let newPlayer = new Player(playerStart, player.maxHP, player.speed, world)\r\n\r\n            Body.setAngle(newPlayer.body, -90 * Math.PI / 180)\r\n            dispatch(setPlayerAngle(newPlayer.body.angle))\r\n            dispatch(setPlayerPosition(newPlayer.body.position))\r\n            let enemy = new Enemy.Statue(enemyStart, world)\r\n            enemy.body.hp = 1\r\n            newPlayer.add()\r\n            enemy.add()\r\n            Body.setAngle(enemy.body, 90 * Math.PI / 180)\r\n            tiles.block(playerStart, enemyStart)\r\n        }\r\n    },\r\n    \"training2\": {\r\n        start: (player, board, tiles, world, dispatch) => {\r\n            let playerStart = { ...board[51] }\r\n            let enemyStart = { ...board[12] }\r\n            let newPlayer = new Player(playerStart, player.maxHP, player.speed, world)\r\n\r\n            Body.setAngle(newPlayer.body, -90 * Math.PI / 180)\r\n            dispatch(setPlayerAngle(newPlayer.body.angle))\r\n            dispatch(setPlayerPosition(newPlayer.body.position))\r\n            dispatch(setSpellbookLength(4))\r\n            let enemy = new Enemy.Statue(enemyStart, world)\r\n            newPlayer.add()\r\n            enemy.add()\r\n            Body.setAngle(enemy.body, 90 * Math.PI / 180)\r\n            tiles.block(playerStart, enemyStart)\r\n        }\r\n    },\r\n    \"training3\": {\r\n        start: (player, board, tiles, world, dispatch) => {\r\n            let playerStart = { ...board[51] }\r\n            let enemyStart = { ...board[12] }\r\n            let newPlayer = new Player(playerStart, player.maxHP, player.speed, world)\r\n            dispatch(setSpellbookLength(6))\r\n            Body.setAngle(newPlayer.body, -90 * Math.PI / 180)\r\n            dispatch(setPlayerAngle(newPlayer.body.angle))\r\n            dispatch(setPlayerPosition(newPlayer.body.position))\r\n            let enemy = new Enemy.Elf(enemyStart, world)\r\n            enemy.body.moveSpeed = 0\r\n            enemy.body.name = \"Caster Statue\"\r\n            Body.setStatic(enemy.body, true)\r\n            newPlayer.add()\r\n            enemy.add()\r\n            Body.setAngle(enemy.body, 90 * Math.PI / 180)\r\n            tiles.block(playerStart, enemyStart)\r\n        }\r\n    },\r\n    \"training4\": {\r\n        start: (player, board, tiles, world, dispatch) => {\r\n            let playerStart = { ...board[51] }\r\n            let enemyStart = { ...board[4] }\r\n            let gargoyleLeft = { ...board[11] }\r\n            let gargoyleRight = { ...board[13] }\r\n            let newPlayer = new Player(playerStart, player.maxHP, player.speed, world)\r\n            dispatch(setSpellbookLength(8))\r\n            Body.setAngle(newPlayer.body, -90 * Math.PI / 180)\r\n            dispatch(setPlayerAngle(newPlayer.body.angle))\r\n            dispatch(setPlayerPosition(newPlayer.body.position))\r\n            let enemy = new Enemy.Elf(enemyStart, world)\r\n            let garg = new Enemy.Warg(gargoyleLeft, world)\r\n            garg.body.name = \"Gargoyle\"\r\n            let oyle = new Enemy.Warg(gargoyleRight, world)\r\n            oyle.body.name = \"Gargoyle\"\r\n\r\n            enemy.body.moveSpeed = 0\r\n            enemy.body.name = \"Caster Statue\"\r\n            Body.setStatic(enemy.body, true)\r\n            newPlayer.add()\r\n            enemy.add()\r\n            garg.add()\r\n            oyle.add()\r\n            Body.setAngle(enemy.body, 90 * Math.PI / 180)\r\n            tiles.block(playerStart, enemyStart)\r\n        }\r\n    }\r\n}\r\n","import { useRef } from 'react'\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { usePhase } from \"./usePhase\"\r\nimport { useCommon } from './useCommon'\r\n\r\nexport let useEndTurn = battle => {\r\n    let bodies = useRef()\r\n    bodies.current = useSelector(state => state.world.bodies, shallowEqual)\r\n    let common = useCommon()\r\n    let phase = usePhase()\r\n    return battlePhase\r\n\r\n    function battlePhase() {\r\n        let g = common.stepGen()\r\n        let next = () => {\r\n            let enemies = bodies.current.filter(key => key.label === \"Enemy\" && key.hp > 0)\r\n            let players = bodies.current.filter(key => key.label === \"Player\")\r\n            if (enemies.length === 0) common.timeout(() => battle.victory(), 1000)\r\n            else if (players[0].hp <= 0) common.timeout(() => battle.defeat(), 1000)\r\n            else schedule[g.next().value]()\r\n        }\r\n        let schedule = [() => phase.start(next), newTurn]\r\n        function newTurn() {\r\n            let characters = bodies.current\r\n                .filter(key => key.label === \"Player\" || key.label === \"Enemy\")\r\n                .sort((a, b) => a.moveSpeed - b.moveSpeed)\r\n                .reverse()\r\n                .map(key => (key.label === \"Player\") ? [() => phase.player(next), () => phase.cast(next)] : () => phase.enemy(key, next))\r\n\r\n            schedule.push(\r\n                ...characters.flat(),\r\n                () => phase.cleanup(next),\r\n                newTurn)\r\n            next()\r\n        }\r\n        next()\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport Board from \"./scenario/Board\"\r\nimport Grid from \"./scenario/Grid\"\r\nimport Start from \"./scenario/Start\"\r\nimport {useSelector} from 'react-redux'\r\nimport { useScene } from './scene'\r\n\r\nlet Scenario = () => {\r\n    let startFight = useScene()\r\n    let startButton = useSelector(state => state.world.showStartButton)\r\n    return (\r\n        <>\r\n            <Board />\r\n            <Grid />\r\n            {(startButton) && <Start onClick={startFight} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Scenario\r\n","import Ow from \"./index\"\r\nimport React from \"react\"\r\nimport { useSelector } from 'react-redux'\r\n\r\nlet Page = props => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    let width = (viewBox.width - 200) / 2\r\n    let fontSize = 50\r\n    let margin = 100\r\n    let height = viewBox.height - margin * 2\r\n    let text = props.text.map(key => divideString(key, Math.floor(width / fontSize))).flat()\r\n    let columns = divideColumn(fontSize, text, height)\r\n    return (\r\n        <g>\r\n            {props.title && <Ow.PageTitle title={props.title} />}\r\n            {props.text && <Ow.PageColumns columns={columns} margin={margin} fontSize={fontSize} />}\r\n        </g>\r\n    )\r\n}\r\n\r\n\r\nexport default Page\r\n\r\nlet divideString = (string, n) => {\r\n    let array = string.split(\" \")\r\n    let response = []\r\n    for (let i = 0; i < array.length; i++) {\r\n        let line = array[i]\r\n        while (line.length < n) {\r\n            i++\r\n            let addWord = array[i] === undefined ? \"\" : array[i]\r\n            line = line + \" \" + addWord\r\n        }\r\n        response.push(line)\r\n    }\r\n    return response\r\n}\r\n\r\nlet divideColumn = (fontSize, arr, maxHeight) => {\r\n    let maxLength = Math.floor(maxHeight / (fontSize * 1.5) - 1)\r\n    let result = [arr.slice(0, maxLength), arr.slice(maxLength)]\r\n    return result\r\n\r\n}\r\n","import Background from \"./Background\"\r\nimport Title from './Title'\r\nimport Arrows from \"./Arrows\"\r\nimport AnimateFade from \"./AnimateFade\"\r\nimport Screen from \"./Screen\"\r\nimport Page from \"./Page\"\r\nimport PageTitle from './PageTitle'\r\nimport PageColumns from \"./PageColumns\"\r\nimport PageColumn from \"./PageColumn\"\r\nimport PageLine from \"./PageLine\"\r\nexport default { Background, Title, Arrows, AnimateFade, Screen, Page, PageTitle, PageColumns, PageColumn, PageLine }\r\n","import React from 'react'\r\n\r\nlet Background = props => {\r\n    return (\r\n        <>\r\n            <rect\r\n                x={props.x}\r\n                y={props.y}\r\n                width={props.width}\r\n                height={props.height}\r\n                fill=\"black\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Background\r\n","import React from 'react'\r\nlet TitleScreen = () => {\r\n    return (\r\n        <text\r\n            fontSize='100'\r\n            fontFamily=\"Cinzel Decorative\"\r\n            textAnchor=\"middle\"\r\n            alignmentBaseline=\"central\"\r\n            fill=\"white\"\r\n            pointerEvents=\"none\">\r\n            MAGE\r\n        </text>\r\n    )\r\n}\r\nexport default TitleScreen\r\n","import React from 'react'\r\n\r\nlet Arrows = props => {\r\n    return (\r\n        <>\r\n            <path\r\n                id=\"leftArrow\"\r\n                transform={`translate(${props.x + 25} ${-props.y - 100})`}\r\n                d={` M 0 0 L 100 -100 L 50 0 L 100 100 Z`}\r\n                fill=\"white\"\r\n            />\r\n            <rect\r\n                width=\"100\"\r\n                height=\"200\"\r\n                fill=\"transparent\"\r\n                opacity=\"0.5\"\r\n                transform={`translate(${props.x + 25} ${-props.y - 200})`}\r\n                onClick={() => props.onClick(-1)}\r\n            />\r\n            <path\r\n                id=\"rightArrow\"\r\n                transform={`translate(${-props.x - 25} ${-props.y - 100})`}\r\n                d={` M 0 0 L -100 -100 L -50 0 L -100 100 Z`}\r\n                fill=\"white\"\r\n            />\r\n            <rect\r\n                width=\"100\"\r\n                height=\"200\"\r\n                fill=\"transparent\"\r\n                opacity=\"0.5\"\r\n                transform={`translate(${-props.x - 125} ${-props.y - 200})`}\r\n                onClick={() => props.onClick(1)}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default Arrows\r\n","import React from 'react'\r\nlet AnimateFade = () => {\r\n    return (\r\n        <animate\r\n            id=\"fade-overworld-screen\"\r\n            attributeName=\"opacity\"\r\n            to=\"0\"\r\n            dur=\"0.5s\"\r\n            fill=\"freeze\"\r\n            begin=\"indefinite\" />\r\n    )\r\n}\r\nexport default AnimateFade\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Ow from \"./index\"\r\n\r\nlet Screen = props => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    let backgroundProps = {\r\n        x: viewBox.width / -2,\r\n        y: viewBox.height / -2,\r\n        width: viewBox.width,\r\n        height: viewBox.height,\r\n        fill: \"black\",\r\n    }\r\n    return (\r\n        <g>\r\n            <Ow.Background {...backgroundProps} />\r\n            {props.children}\r\n            <Ow.Arrows {...backgroundProps} onClick={props.onClick} />\r\n            {(props.fight) && <rect x={viewBox.width / 2 - 125} y={viewBox.height / 2 - 200} width=\"100\" height=\"200\" fill=\"transparent\" onClick={props.startFight} />}\r\n            <Ow.AnimateFade />\r\n        </g>\r\n    )\r\n}\r\nexport default Screen\r\n","import React from \"react\"\r\n\r\nlet PageTitle = props => {\r\n    return (\r\n        <text\r\n            fontSize='100'\r\n            fontFamily=\"Cinzel Decorative\"\r\n            textAnchor=\"middle\"\r\n            alignmentBaseline=\"central\"\r\n            fill=\"white\"\r\n            pointerEvents=\"none\">\r\n            {props.title}\r\n        </text>\r\n    )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react'\r\nimport Ow from \"./index\"\r\nlet PageColumns = props => {\r\n    return (\r\n        <g transform={`translate(${props.margin} ${props.margin})`}>\r\n            {props.columns.map((content, index) =>\r\n                <Ow.PageColumn\r\n                    key={`Column${index}`}\r\n                    column={index}\r\n                    content={content}\r\n                    fontSize={props.fontSize}\r\n                />\r\n            )}\r\n        </g>\r\n    )\r\n}\r\nexport default PageColumns\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Ow from \"./index\"\r\nlet PageColumn = props => {\r\n    let viewBox = useSelector(state => state.screen.viewBox)\r\n    return props.content.map((key, index) => (\r\n        <Ow.PageLine\r\n            key={`PageLine${index}`}\r\n            width={viewBox.width}\r\n            height={viewBox.height}\r\n            fontSize={props.fontSize}\r\n            column={props.column}\r\n            content={key}\r\n            line={index}\r\n        />\r\n    ))\r\n}\r\nexport default PageColumn\r\n","import React from 'react'\r\n\r\nlet PageLine = props => {\r\n    return (\r\n        <text\r\n            x={props.width / -2 + (props.width / 2) * props.column}\r\n            y={props.height / -2 + props.line * props.fontSize * 1.5 + props.fontSize}\r\n            fontSize={props.fontSize}\r\n            fontFamily=\"Cinzel Decorative\"\r\n            fill=\"white\"\r\n            pointerEvents=\"none\">\r\n            {props.content}\r\n        </text>\r\n    )\r\n}\r\n\r\nexport default PageLine\r\n","let pages = [\r\n    {\r\n        title: \"Meowge\",\r\n        text: [],\r\n        fight: false,\r\n    },\r\n    {\r\n        title: \"Chapter I - Real Meowgic\",\r\n        text: [],\r\n        fight: false\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: \"training\",\r\n        text: [\r\n            \"Welcome to your first lesson of Runemoewgic, neophyte.\",\r\n            '',\r\n            \"We are supposed to spend the first hour or so explaining the why we can use magic, but that's boring.\",\r\n            \"\",\r\n            \"To cast a spell, simply write the correct rune sequence, then simply cast it.\",\r\n            \"\",\r\n            \"Let's see, how about we start with FU, the rune of FIRE.\",\r\n            \"\",\r\n            \"Go to your spellbook, write FU, and cast that spell to destroy the golem.\",\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: false,\r\n        text: [\r\n            \"Excellent work neophyte, that was a textbook example of taking too long.\",\r\n            \"\",\r\n            \"In any case, let's review some facts from the textbook.\",\r\n            \"\",\r\n            \"Fact number one: There are four elements. Actually five but don't quote me on that.\",\r\n            \"\",\r\n            \"Fact number two: FIRE, EARTH, WATER, WIND. Their runes are FU, TI, GA and VE. Wrong.\",\r\n\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: \"training\",\r\n        text: [\r\n            \"Fact number three: only elemental runes makes your spell stronger. Wrong again, of course.\",\r\n            \"\",\r\n            \"Fact number four: the only way to start a full spell is with an elemental rune. Look at that, they got something right.\",\r\n            \"Fact number five: Every one rune spell should do between two and twelve damage points.\",\r\n            \"Well, that's enough wrong data for now. For now, just focus on destroying the golem with the other runes.\",\r\n            \"\",\r\n            \"Remember; FU TI GA VE. Then cast away.\"\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: false,\r\n        text: [\r\n            \"I knew you could do it, neophyte\",\r\n            \"\",\r\n            \"So further on the power side of the spell, every elemental rune adds between one and six points of damage.\",\r\n            \"\",\r\n            \"Don't ask me to convert points of damage into joules, the formula is in your textbook somewhere.\",\r\n            \"\",\r\n            \"However, the element of the spell is established by the first rune only. Exceptions aside.\",\r\n        ]\r\n    },\r\n    {\r\n        title: '',\r\n        fight: false,\r\n        text: [\r\n            \"In any case, while all runes have a somewhat random list of established incompatibilities, the elemental runes are compatible with almost all runes.\",\r\n            \"\",\r\n            \"A rune will only provide the full force of it's magical power if the rune preceding is not incompatible.\",\r\n            \"\",\r\n            \"For example, GA and FU, WATER and FIRE, are incompatible, and won't work with each other at all.\",\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: \"training2\",\r\n        text: [\r\n            \"So if you were to cast, say, FU-GA, the FU rune would work, but the GA rune would fizzle and not add anything to the spell. The same goes for GA-FU.\",\r\n            \"\",\r\n            \"The full incompatibility list is as follows:\",\r\n            \"\",\r\n            \"EARTH: VE and FU\", \r\n            \"FIRE: GA and TI\", \r\n            \"WATER: FU and VE\", \r\n            \"WIND: TI and FU\",\r\n            \"\",\r\n            \"Here's an additional Rune Slot to try some of your new spells now. If done right you should be adding, in average, about 3.5 points of damage to your spell.\",\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: false,\r\n        text: [\r\n            \"Great work neophyte, you're getting better.\",\r\n            \"\",\r\n            \"So back to incompatibilities, we are intelligent meowges, so we found out that even if two runes are incompatible, we can make them work together.\",\r\n            \"\",\r\n            \"That is, using another compatible rune as a link.\",\r\n            \"\",\r\n            \"Going back to FU-GA, to make that spell work you would need to add another rune in the middle to work as a link.\",\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: false,\r\n        text: [\r\n            \"Any rune would work, even incompatible runes. Take for example, FU-GA-GA, the first and the last would function, and the link would fizzle, but still work as a link.\",\r\n            \"\",\r\n            \"But that would be wasteful, and meowges are everything except wasteful.\",\r\n            \"\",\r\n            \"So instead of using an incompatible rune, we are going refactor this into a working spell.\",\r\n        ],\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: false,\r\n        text: [\r\n            \"For example, the EARTH rune, is compatible with the FIRE rune, and the WATER rune is compatible with the EARTH rune. As such, FU-TI-GA, is a fully working spell.\",\r\n            \"\",\r\n            \"If instead of using the EARTH rune we wanted, for mysterious reasons, to use the WIND rune, that would be a little more complicated, but still possible.\",\r\n            \"\",\r\n            \"VE is incompatible with FU, but compatible with GA. So, to make this work, we change the order to GA-VE-FU.\"\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: \"training3\",\r\n        text: [\r\n            \"Which would be a spell with the same power level of FU-TI-GA, although it distills into a bolt of a different element.\",\r\n            \"\",\r\n            \"And that's why I wanted you to remember FU-TI-GA-VE, that's the order of elemental rune compatibilities, FIRE, EARTH, WATER, WIND.\",\r\n            \"\",\r\n            \"Now it's time to put in practice some of this, why don't you fight against a more powerful golem? Go, neophyte.\",\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: \"training4\",\r\n        text: [\r\n            \"Welcome to your final lesson, neophyte.\",\r\n            \"\",\r\n            \"Today you will prove to us that you know how to defend yourself.\",\r\n            \"\",\r\n            \"Remember: FU for FIRE, VE for WIND, GA for WATER, EARTH with TI.\",\r\n            \"\",\r\n            \"Come on now, we're waiting...\"\r\n        ]\r\n    },\r\n    {\r\n        title: \"\",\r\n        fight: false,\r\n        text: [\r\n            \"Congratulations, mage.\",\r\n            \"\",\r\n            \"Your first mission as a formal member of this magisterium is to retrieve the infamous ORB OF ZOT\",\r\n            '',\r\n            \"It's located on the lowest floor of the dungeon below.\",\r\n            \"Good luck.\"\r\n        ]\r\n    },\r\n]\r\n\r\nexport default pages\r\n","import React from 'react'\r\nimport Ow from \"./overworld/\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { showScenario, updatePage } from \"../redux/actions\"\r\nimport Pages from \"./overworld/History\"\r\n\r\nlet Overworld = () => {\r\n    let currentPage = useSelector(state => state.world.currentPage)\r\n    let fights = useSelector(state => state.world.fights)\r\n    let dispatch = useDispatch()\r\n    let onClick = n => Pages[currentPage + n] !== undefined ? dispatch(updatePage(currentPage + n)) : dispatch(updatePage(currentPage))\r\n    let startFight = () => dispatch(showScenario(true))\r\n    return (\r\n        <Ow.Screen onClick={onClick} fight={fights[currentPage]} startFight={startFight}>\r\n            <Ow.Page title={Pages[currentPage].title} text={Pages[currentPage].text} />\r\n        </Ow.Screen>\r\n    )\r\n}\r\n\r\nexport default Overworld\r\n","import { useEffect, useRef } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEngine } from \"./useEngine\"\r\nimport { Engine } from 'matter-js'\r\nimport { updateBodies } from \"../../redux/actions\"\r\n\r\nexport const useAnimationFrame = () => {\r\n    let engine = useEngine()\r\n    let dispatch = useDispatch()\r\n    const requestRef = useRef();\r\n    let pause = useRef()\r\n    pause.current = useSelector(state => state.screen.pause)\r\n    useEffect(() => {\r\n        function updateCycle() {\r\n            Engine.update(engine)\r\n            let bodies = [...engine.world.bodies]\r\n            dispatch(updateBodies(bodies))\r\n        }\r\n        const animate = () => {\r\n            if (!pause.current) updateCycle()\r\n            requestRef.current = requestAnimationFrame(animate);\r\n        }\r\n        requestRef.current = requestAnimationFrame(animate);\r\n        return () => {\r\n            cancelAnimationFrame(requestRef.current)\r\n        };\r\n    }, [engine, dispatch]);\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useResizeScreen } from \"./hooks/useResizeScreen\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setPause } from \"../redux/actions\"\r\nimport Renderer from \"./Renderer\"\r\nimport UI from \"./UI\"\r\nimport BattleScenario from \"./BattleScenario\"\r\nimport Overworld from \"./Overworld\"\r\nimport { useAnimationFrame } from \"./hooks/useAnimationFrame\"\r\n\r\n\r\nlet Game = () => {\r\n    let dispatch = useDispatch()\r\n    let pause = useSelector(state => state.screen.pause)\r\n    let showScenario = useSelector(state => state.world.showScenario)\r\n    useResizeScreen()\r\n    useAnimationFrame()\r\n    useEffect(() => {\r\n        let onKeyDown = e => { if (e.key === \"Escape\") dispatch(setPause(!pause)) }\r\n        window.addEventListener(\"keydown\", onKeyDown)\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", onKeyDown)\r\n        }\r\n    }, [pause, dispatch])\r\n    return (\r\n        <>\r\n\r\n            {(showScenario) && <BattleScenario />}\r\n            <Renderer />\r\n            {(!showScenario) && <Overworld />}\r\n            <UI />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\nlet playerDef = () => {\r\n    return (\r\n        <symbol id=\"playerSprite\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\r\n            <path fill=\"blue\"\r\n                d=\"M 9.04,18.04\r\n                    C 9.04,18.04 5.04,32.04 5.04,32.04\r\n                    5.04,32.04 26.04,32.04 26.04,32.04\r\n                    26.04,32.04 23.04,18.04 23.04,18.04\r\n                    16.00,15.00 16.00,15.00 9.04,18.04 Z\" />\r\n\r\n            <path id=\"scarf\"\r\n                fill=\"goldenrod\"\r\n                d=\"M 16.00,18.00\r\n                C 13.00,18.00 10.00,17.00 10.00,17.00\r\n                    10.00,17.00 11.00,19.00 13.00,19.00\r\n                    21.00,19.00 23.00,24.00 23.00,24.00\r\n                    23.00,24.00 24.00,19.50 21.00,19.00\r\n                    20.84,17.88 22.00,17.00 22.00,17.00\r\n                    22.00,17.00 19.00,18.00 16.00,18.00 Z\" />\r\n            <path\r\n                fill=\"grey\"\r\n                d=\"M 11.00,7.00\r\n                C 10.89,7.07 9.11,5.93 9.00,6.00\r\n                    4.00,23.00 28.00,23.00 23.00,6.00\r\n                    22.89,5.95 21.12,7.05 21.00,7.00\r\n                    18.00,6.00 14.00,6.00 11.00,7.00 Z\" />\r\n            <path\r\n                fill=\"yellow\"\r\n                d=\"M 3.00,11.00\r\n                C 8.00,13.00 8.00,11.00 9.00,10.00\r\n                    10.00,9.00 22.00,9.00 23.00,10.00\r\n                    24.00,11.00 24.00,13.00 29.00,11.00\r\n                    21.00,9.00 19.00,5.00 16.00,0.00\r\n                    13.00,5.00 11.00,9.00 3.00,11.00 Z\" />\r\n            <ellipse\r\n                fill=\"cyan\"\r\n                cx=\"13\"\r\n                cy=\"12\"\r\n                ry=\"1.2\"\r\n                rx=\".6\"\r\n            />\r\n            <ellipse\r\n                fill=\"cyan\"\r\n                cx=\"19\"\r\n                cy=\"12\"\r\n                ry=\"1.2\"\r\n                rx=\"0.6\"\r\n            />\r\n        </symbol>\r\n    )\r\n\r\n}\r\nexport default playerDef\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Player from \"./definitions/playerDef\"\r\nlet Definitions = props => {\r\n    let menu = {\r\n        height: props.viewBox.height,\r\n        width: props.viewBox.height * 9 / 16,\r\n        x: (props.viewBox.height * 9 / 16) / -2,\r\n        y: props.viewBox.height / -2\r\n    }\r\n    let spellbook = {\r\n        width: props.viewBox.width * 4 / 5,\r\n        height: props.viewBox.height * 1 / 4,\r\n        x: (props.viewBox.width * 4 / 5) / -2,\r\n        y: (props.viewBox.height * 1 / 4) / -2,\r\n    }\r\n\r\n    return (\r\n        <defs>\r\n            <style type=\"text/css\">\r\n                {`@import url(\"https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@700&display=swap\")`}\r\n            </style>\r\n\r\n\r\n            <radialGradient id=\"background-radial\" cx=\"50%\" cy=\"50%\" fx=\"50%\" fy=\"50%\">\r\n                <stop offset=\"0%\" stopColor=\"white\" stopOpacity=\"1\"></stop>\r\n                <stop offset=\"100%\" stopColor=\"black\" stopOpacity=\"1\" />\r\n            </radialGradient>\r\n            <filter id=\"spellbook-filter\">\r\n                <feTurbulence\r\n                    {...spellbook}\r\n                    baseFrequency=\"0.1\"\r\n                    numOctaves=\"5\" />\r\n            </filter>\r\n            <filter id=\"shadow-blur\">\r\n                <feGaussianBlur stdDeviation=\"4\" />\r\n            </filter>\r\n            <mask {...spellbook} id=\"spellbook-mask\">\r\n                <rect\r\n                    {...spellbook}\r\n                    fill=\"black\"\r\n                />\r\n                <rect\r\n                    {...spellbook}\r\n                    fill=\"white\"\r\n                    rx=\"20\"\r\n                />\r\n            </mask>\r\n            <filter id=\"menu-filter\">\r\n                <feTurbulence\r\n                    {...menu}\r\n                    baseFrequency=\"0.1\"\r\n                    numOctaves=\"5\" />\r\n            </filter>\r\n            <mask id=\"menu-background-mask\" {...menu}>\r\n                <rect\r\n                    {...menu}\r\n                    fill=\"black\"\r\n                />\r\n                <rect\r\n                    {...menu}\r\n                    fill=\"white\"\r\n                    rx=\"20\"\r\n                />\r\n            </mask>\r\n            <Player />\r\n        </defs>\r\n    )\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        viewBox: state.screen.viewBox\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Definitions)\r\n","import React from 'react'\r\nimport Definitions from \"./Definitions\"\r\nimport { connect } from \"react-redux\"\r\n\r\nlet ViewBox = props => {\r\n    return (\r\n        <svg\r\n            id=\"main-svg\"\r\n            viewBox={`${props.width / -2} ${props.height / -2} ${props.width} ${props.height}`}\r\n            preserveAspectRatio=\"xMidYMid meet\">\r\n            <Definitions />\r\n            <rect\r\n                fill=\"black\"\r\n                width=\"10000\"\r\n                height=\"10000\"\r\n                x=\"-5000\"\r\n                y=\"-5000\" />\r\n            <rect\r\n                fill=\"url(#background-radial)\"\r\n                width={props.width}\r\n                height={props.height}\r\n                x={props.width / -2}\r\n                y={props.height / -2}>\r\n\r\n            </rect>\r\n            <rect\r\n                fill='transparent'\r\n                stroke=\"white\"\r\n                strokeWidth=\"3\"\r\n                width={props.width}\r\n                height={props.height}\r\n                x={props.width / -2}\r\n                y={props.height / -2}\r\n            />\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        ...state.screen.viewBox,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ViewBox)\r\n","import { UPDATE_BODIES, UPDATE_BOARD, UPDATE_TILE, UPDATE_PAGE, SCENARIO_SHOW, START_BUTTON_SHOW, FIGHT_ENTRY_UPDATE } from \"../actionTypes\"\r\nimport { viewBox } from \"./screen\"\r\nimport Pages from \"../../game/overworld/History\"\r\n\r\nlet fights = {}\r\nfor (let i = 0; i < Pages.length; i++) { fights[i] = Pages[i].fight }\r\n\r\nconst initialState = {\r\n    bodies: [],\r\n    board: generateBoard(viewBox.width, viewBox.height),\r\n    showScenario: false,\r\n    showStartButton: true,\r\n    currentPage: 0,\r\n    fights,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case UPDATE_BODIES: return {\r\n            ...state,\r\n            bodies: action.payload\r\n        }\r\n        case UPDATE_BOARD: return {\r\n            ...state,\r\n            board: action.payload\r\n        }\r\n        case UPDATE_TILE: return {\r\n            ...state,\r\n            board: [...state.board.slice(0, action.payload.tile), action.payload, ...state.board.slice(action.payload.tile + 1)]\r\n        }\r\n        case UPDATE_PAGE: return {\r\n            ...state,\r\n            currentPage: action.payload\r\n        }\r\n        case SCENARIO_SHOW: return {\r\n            ...state,\r\n            showScenario: action.payload\r\n        }\r\n        case START_BUTTON_SHOW: return {\r\n            ...state,\r\n            showStartButton: action.payload\r\n        }\r\n        case FIGHT_ENTRY_UPDATE: return {\r\n            ...state,\r\n            fights: {\r\n                ...state.fights,\r\n                [action.payload]: false\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction get4Centers(width, height, x, y, times) {\r\n    let results = [{ x: 1, y: 0 }, { x: 0, y: 1 }, { x: -1, y: 0 }, { x: 0, y: -1 }]\r\n    for (let i in results) {\r\n        let result = {\r\n            width: width / 2,\r\n            height: height / 2,\r\n            x: x + width / 4 * results[i].x,\r\n            y: y + height / 4 * results[i].y,\r\n            blocked: false,\r\n        }\r\n        results[i] = result\r\n    }\r\n    let remainingTimes = times - 1\r\n    if (remainingTimes > 0) results.map((key, index) => results[index] = get4Centers(key.width, key.height, key.x, key.y, remainingTimes).flat())\r\n\r\n    return results\r\n}\r\n\r\nfunction sortByHeight(a, b) {\r\n    let result = a.y - b.y\r\n    if (a.y - b.y === 0) return a.x - b.x\r\n    else return result\r\n}\r\n\r\nfunction connectTiles(board) {\r\n    for (let tile in board) {\r\n        let connections = {\r\n            top: { x: board[tile].x, y: board[tile].y - board[tile].height },\r\n            topleft: { x: board[tile].x - board[tile].width / 2, y: board[tile].y - board[tile].height / 2 },\r\n            topright: { x: board[tile].x + board[tile].width / 2, y: board[tile].y - board[tile].height / 2 },\r\n            left: { x: board[tile].x - board[tile].width, y: board[tile].y },\r\n            right: { x: board[tile].x + board[tile].width, y: board[tile].y },\r\n            botleft: { x: board[tile].x - board[tile].width / 2, y: board[tile].y + board[tile].height / 2 },\r\n            botright: { x: board[tile].x + board[tile].width / 2, y: board[tile].y + board[tile].height / 2 },\r\n            bot: { x: board[tile].x, y: board[tile].y + board[tile].height },\r\n        }\r\n        board[tile][\"connections\"] = connections\r\n    }\r\n    return board\r\n}\r\n\r\nexport function generateBoard(width, height) {\r\n    let results = get4Centers(width - 100, height - 100, 0, 0, 3).flat()\r\n    results = results.sort((a, b) => sortByHeight(a, b))\r\n    results.forEach((key, index) => key.tile = index)\r\n    connectTiles(results)\r\n    return results\r\n}\r\n","import React from 'react';\nimport Game from \"./game\";\nimport ViewBox from \"./assets/svg/ViewBox\"\nimport { withCookies } from \"react-cookie\"\nimport './assets/css/App.css';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <ViewBox>\n        <Game cookies={props.cookies} />\n      </ViewBox>\n    </div>\n  );\n}\n\n\nexport default withCookies(App)\n\n\n","import { SHOW_SCREEN, RESIZE_SCREEN, PAUSE_SET } from \"../actionTypes\"\r\nlet height = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth * 9 / 16 : window.innerHeight\r\nlet width = window.innerHeight > window.innerWidth * 9 / 16 ? window.innerWidth : window.innerHeight * 16 / 9\r\nlet offset = (window.innerWidth - width) / 2\r\n\r\nexport let viewBox = {\r\n    width: 2000,\r\n    height: 1125,\r\n}\r\n\r\nlet initialState = {\r\n    current: \"start\",\r\n    viewBox: viewBox,\r\n    pause: false,\r\n    svg: {\r\n        height: height,\r\n        width: width,\r\n        offset: offset * viewBox.width / width,\r\n        windowOffset: (window.innerWidth - width) / -2\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SHOW_SCREEN: return {\r\n            ...state,\r\n            current: action.payload\r\n        }\r\n        case RESIZE_SCREEN: return {\r\n            ...state,\r\n            svg: action.payload\r\n        }\r\n        case PAUSE_SET: return {\r\n            ...state,\r\n            pause: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n","import { MOUSE_SET } from \"../actionTypes\"\r\n\r\nlet initialState = {\r\n    position: {\r\n        x: 0,\r\n        y: 0,\r\n    }\r\n\r\n}\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case MOUSE_SET: return {\r\n            ...state,\r\n            position: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n","import { UI_SHOW } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    show: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case UI_SHOW: return {\r\n            ...state,\r\n            show: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n","import { SPELLBOOK_LENGTH_SET, SPELLBOOK_SHOW, SPELLBOOK_LOAD } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    show: false,\r\n    length: 2,\r\n    spells: [],\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SPELLBOOK_SHOW: return {\r\n            ...state,\r\n            show: action.payload\r\n        }\r\n        case SPELLBOOK_LENGTH_SET: return {\r\n            ...state,\r\n            length: action.payload\r\n        }\r\n        case SPELLBOOK_LOAD: return {\r\n            ...state,\r\n            spells: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n","import { PLAYER_POSITION_SET, PLAYER_HP_SET, PLAYER_ANGLE_SET, PLAYER_MAXHP_SET, PLAYER_MOVED_SET } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    HP: 100,\r\n    maxHP: 100,\r\n    speed: 5,\r\n    angle: 0,\r\n    position: { x: 0, y: 0 },\r\n    moved: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case PLAYER_POSITION_SET: return {\r\n            ...state,\r\n            position: action.payload\r\n        }\r\n        case PLAYER_HP_SET: return {\r\n            ...state,\r\n            HP: action.payload\r\n        }\r\n        case PLAYER_ANGLE_SET: return {\r\n            ...state,\r\n            angle: action.payload,\r\n        }\r\n        case PLAYER_MAXHP_SET: return {\r\n            ...state,\r\n            maxHP: action.payload\r\n        }\r\n        case PLAYER_MOVED_SET: return {\r\n            ...state,\r\n            moved: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n","import {\r\n    BATTLE_SHOW,\r\n    BATTLE_SPELL_TITLE_SHOW,\r\n    BATTLE_SPELL_TITLE_SET,\r\n    BATTLE_START_SHOW,\r\n    BATTLE_MENU_SHOW,\r\n    BATTLE_PHASE_FORCE_NEXT,\r\n    BATTLE_RESULT_SET\r\n} from \"../actionTypes\"\r\n\r\nlet initialState = {\r\n    show: false,\r\n    showStart: false,\r\n    showTitle: false,\r\n    title: \"\",\r\n    showMenu: false,\r\n    result: null,\r\n    next: () => { },\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case BATTLE_SHOW: return {\r\n            ...state,\r\n            show: action.payload\r\n        }\r\n        case BATTLE_START_SHOW: return {\r\n            ...state,\r\n            showStart: action.payload\r\n        }\r\n        case BATTLE_SPELL_TITLE_SHOW: return {\r\n            ...state,\r\n            showTitle: action.payload\r\n        }\r\n        case BATTLE_SPELL_TITLE_SET: return {\r\n            ...state,\r\n            title: action.payload\r\n        }\r\n        case BATTLE_MENU_SHOW: return {\r\n            ...state,\r\n            showMenu: action.payload\r\n        }\r\n        case BATTLE_PHASE_FORCE_NEXT: return {\r\n            ...state,\r\n            next: action.payload\r\n        }\r\n        case BATTLE_RESULT_SET: return {\r\n            ...state,\r\n            result: action.payload\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n","import { MOVE_SHOW } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    show: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case MOVE_SHOW: return {\r\n            ...state,\r\n            show: action.payload\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n","import { CHAT_SHOW, CHAT_MESSAGES_SET } from '../actionTypes'\r\n\r\nlet initialState = {\r\n    show: false,\r\n    messages: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHAT_SHOW: return {\r\n            ...state,\r\n            show: action.payload\r\n        }\r\n        case CHAT_MESSAGES_SET: return {\r\n            ...state,\r\n            messages: [...state.messages, action.payload].slice(Math.max(state.messages.length - 3, 0))\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport screen from \"./screen\"\r\nimport mouse from \"./mouse\"\r\nimport world from \"./world\"\r\nimport UI from \"./ui\"\r\nimport spellbook from \"./spellbook\"\r\nimport player from \"./player\"\r\nimport battle from \"./battle\"\r\nimport move from \"./move\"\r\nimport chat from \"./chat\"\r\nexport default combineReducers({ screen, mouse, world, UI, spellbook, player, battle, move, chat })\r\n","import rootReducer from \"./reducers\";\r\nimport { createStore, compose } from \"redux\"\r\n\r\nconst STORE = createStore(rootReducer,\r\n    compose(\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport default STORE;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport STORE from './redux/store';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={STORE}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}